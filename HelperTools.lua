script_name("Helper Tools")
script_version("beta test")
script_author('Lance_Sterling')
script_properties("work-in-pause")
require('lib.moonloader')
require('sampfuncs')
function AddChatMessage(text, style)
    if style == 1 then
        local tag = '[Helper Tools]{FFFFFF}: '
        sampAddChatMessage(tag..text, 0x00BFFF)
    elseif style == 2 then
        local tag = '[Ошибка] {FFFFFF}'
        sampAddChatMessage(tag..text, 0xF08080)
    elseif style == 3 then
        local tag = '[Информация] {FFFFFF}'
        sampAddChatMessage(tag..text, 0xA9A9A9)
    end
end
local load_imgui, imgui = pcall(require, 'mimgui')
if not load_imgui then
    lua_thread.create(function()
        while not isSampAvailable() do wait(0) end
        print('У вас не установлена библиотека MIMGUI, обратитесь к автору скрипта https://vk.com/maksytka_desighner')
        wait(10)
        AddChatMessage('У вас не установлена библиотека MIMGUI, обратитесь к автору скрипта https://vk.com/maksytka_desighner', 2)
        thisScript():unload()
    end)
end
local load_encoding, encoding = pcall(require, 'encoding')
if not load_encoding then
    lua_thread.create(function()
        while not isSampAvailable() do wait(0) end
        print('У вас не установлена библиотека ENCODING, обратитесь к автору скрипта https://vk.com/maksytka_desighner')
        wait(10)
        AddChatMessage('У вас не установлена библиотека ENCODING, обратитесь к автору скрипта https://vk.com/maksytka_desighner', 2)
        thisScript():unload()
    end)
end
local load_inicfg, inicfg = pcall(require, 'inicfg')
if not load_inicfg then
    lua_thread.create(function()
        while not isSampAvailable() do wait(0) end
        print('У вас не установлена библиотека INICFG, обратитесь к автору скрипта https://vk.com/maksytka_desighner')
        wait(10)
        AddChatMessage('У вас не установлена библиотека INICFG, обратитесь к автору скрипта https://vk.com/maksytka_desighner', 2)
        thisScript():unload()
    end)
end
local load_ffi, ffi = pcall(require, 'ffi')
if not load_ffi then
    lua_thread.create(function()
        while not isSampAvailable() do wait(0) end
        print('У вас не установлена библиотека FFI, обратитесь к автору скрипта https://vk.com/maksytka_desighner')
        wait(10)
        AddChatMessage('У вас не установлена библиотека FFI, обратитесь к автору скрипта https://vk.com/maksytka_desighner', 2)
        thisScript():unload()
    end)
end
local load_sampev, samp = pcall(require, 'lib.samp.events')
if not load_sampev then
    lua_thread.create(function()
        while not isSampAvailable() do wait(0) end
        print('У вас не установлена библиотека SAMP EVENTS (SAMP.lua), обратитесь к автору скрипта https://vk.com/maksytka_desighner')
        wait(10)
        AddChatMessage('У вас не установлена библиотека SAMP EVENTS (SAMP.lua), обратитесь к автору скрипта https://vk.com/maksytka_desighner', 2)
        thisScript():unload()
    end)
end
local load_vkeys, vkeys = pcall(require, 'vkeys')
if not load_vkeys then
    lua_thread.create(function()
        while not isSampAvailable() do wait(0) end
        print('У вас не установлена библиотека VKEYS, обратитесь к автору скрипта https://vk.com/maksytka_desighner')
        wait(10)
        AddChatMessage('У вас не установлена библиотека VKEYS, обратитесь к автору скрипта https://vk.com/maksytka_desighner', 2)
        thisScript():unload()
    end)
end
local load_rkeys, rkeys = pcall(require, 'rkeys')
if not load_rkeys then
    lua_thread.create(function()
        while not isSampAvailable() do wait(0) end
        print('У вас не установлена библиотека RKEYS, обратитесь к автору скрипта https://vk.com/maksytka_desighner')
        wait(10)
        AddChatMessage('У вас не установлена библиотека RKEYS, обратитесь к автору скрипта https://vk.com/maksytka_desighner', 2)
        thisScript():unload()
    end)
end
local load_wm, wm = pcall(require, 'lib.windows.message')
if not load_wm then
    lua_thread.create(function()
        while not isSampAvailable() do wait(0) end
        print('У вас не установлена библиотека WINDOWS MESSAGE, обратитесь к автору скрипта https://vk.com/maksytka_desighner')
        wait(10)
        AddChatMessage('У вас не установлена библиотека WINDOWS MESSAGE, обратитесь к автору скрипта https://vk.com/maksytka_desighner', 2)
        thisScript():unload()
    end)
end
local load_faicons, faicons = pcall(require, 'fAwesome6')
if not load_faicons then
    lua_thread.create(function()
        while not isSampAvailable() do wait(0) end
        print('У вас не установлена библиотека fAwesome6, обратитесь к автору скрипта https://vk.com/maksytka_desighner')
        wait(10)
        AddChatMessage('У вас не установлена библиотека fAwesome6, обратитесь к автору скрипта https://vk.com/maksytka_desighner', 2)
        thisScript():unload()
    end)
end
encoding.default = 'CP1251'
u8 = encoding.UTF8
local directIni = '..\\HelperTools\\HelperTools.ini'
local mainIni = inicfg.load(inicfg.load({
    settings = {
        hask = '[81]',
        autoanswer = false,
        autoopenanswer = false
    },
}, directIni))
inicfg.save(mainIni, directIni)
local hask = {
    v = decodeJson(mainIni.settings.hask)
}

local new, str, sizeof = imgui.new, ffi.string, ffi.sizeof
ffi.cdef[[
    intptr_t LoadKeyboardLayoutA(const char* pwszKLID, unsigned int Flags);
    int PostMessageA(intptr_t hWnd, unsigned int Msg, unsigned int wParam, long lParam);
    intptr_t GetActiveWindow();
]]
do
    local buffer = {}
    function setKeyboardLanguage(lang)
        if buffer[lang] == nil then
            buffer[lang] = ffi.C.LoadKeyboardLayoutA(lang, 1);
        end
        ffi.C.PostMessageA(ffi.C.GetActiveWindow(), 0x50, 1, buffer[lang]);
    end
end
local all_q = 0
local renderWindow = new.bool(false)
local renderQuestion = new.bool(false)
local blockhask = true
function json(filePath)
    local filePath = getWorkingDirectory()..'\\config\\'..(filePath:find('(.+).json') and filePath or filePath..'.json')
    local class = {}
    if not doesDirectoryExist(getWorkingDirectory()..'\\config') then
        createDirectory(getWorkingDirectory()..'\\config')
    end
    
    function class:Save(tbl)
        if tbl then
            local F = io.open(filePath, 'w')
            F:write(encodeJson(tbl) or {})
            F:close()
            return true, 'ok'
        end
        return false, 'table = nil'
    end
    
    function class:Load(defaultTable)
        if not doesFileExist(filePath) then
            class:Save(defaultTable or {})
        end
        local F = io.open(filePath, 'r+')
        local TABLE = decodeJson(F:read() or {})
        F:close()
        for def_k, def_v in next, defaultTable do
            if TABLE[def_k] == nil then
                TABLE[def_k] = def_v
            end
        end
        return TABLE
    end

    return class
end
local help_notes = json('..\\HelperTools\\Help_Notes.json'):Load({})
function save(selectSave)
    if selectSave == nil then
        json('Help_Notes.json'):Save(help_notes)
        inicfg.save(mainIni, directIni)
    elseif selectSave == 1 then
        json('Help_Notes.json'):Save(help_notes)
    elseif selectSave == 2 then
        inicfg.save(mainIni, directIni)
    end
end

function main()
    while not isSampAvailable() do wait(0) end
    autoupdate("https://github.com/maksytkadesighner/Helper-Tools/raw/main/version.json", '{00BFFF}[Обновление '..thisScript().name..']: {FFFFFF}', "https://vk.com/maksytka_desighner")
    if not doesFileExist(getWorkingDirectory()..'\\HelperTools\\main.png') then
        local dlstatus = require('moonloader').download_status
        downloadUrlToFile('https://github.com/maksytkadesighner/Helper-Tools/blob/main/main.png?raw=true', getWorkingDirectory()..'\\HelperTools\\main.png', function(id, status, p1, p2)
            if status == dlstatus.STATUS_ENDDOWNLOADDATA then
                AddChatMessage('Загрузка логотипа успешно завершена.', 3)
            end
        end)
    end
    sampRegisterChatCommand('ht', function()
        renderWindow[0] = not renderWindow[0]
    end)
    bindHaskFunc = lua_thread.create_suspended(function()
        if not isSampAvailable() then return end
        if sampIsChatInputActive() or sampIsDialogActive() then return end
        if blockhask then return AddChatMessage('Скрипт только включился, дождитесь первого вопроса в чате!', 2) end
        if renderQuestion[0] then return AddChatMessage('Вы уже отвечаете на вопрос!',2) end
    
        local t_all_q = tonumber(all_q)
        if not all_q or not t_all_q or t_all_q == 0 then return AddChatMessage('Сейчас нет вопросов!', 2) end
    
        sampSendChat('/ha')
        repeat wait(0) until sampIsDialogActive()
        sampSendDialogResponse(772, 1, t_all_q - 1, _)
        sampCloseCurrentDialogWithButton(0)
        if t_all_q > 0 then all_q = all_q - 1 end
    end)
    bindHask = rkeys.registerHotKey(hask.v, true, function ()
        if mainIni.settings.autoopenanswer then
            if isCharInAnyCar(PLAYER_PED) then
                local car = getCarModel(storeCarCharIsInNoSave(PLAYER_PED))
                if car ~= 548 and car ~= 425 and car ~= 417 and car ~= 487 and car ~= 497 and car ~= 563 and car ~= 447 and car ~= 469 and car ~= 488 then
                    bindHaskFunc:terminate() bindHaskFunc:run()
                else
                    if not sampIsChatInputActive() and not sampIsDialogActive() then
                        AddChatMessage('Вы находитесь в вертолете, поэтому вы не сможете отвечать на вопросы находясь в нем.', 3)
                    end
                end
            else
                bindHaskFunc:terminate() bindHaskFunc:run()
            end
        else
            sampSendChat('/ha')
        end
    end)
    while true do
        wait(0)
        sampToggleCursor(renderWindow[0] or renderQuestion[0] or sampIsDialogActive() or sampIsChatInputActive() or isSampfuncsConsoleActive() or sampIsScoreboardOpen())
    end
end

local AI_HINTS = {}
local tBlockKeys = {[vkeys.VK_RETURN] = true, [vkeys.VK_T] = true, [vkeys.VK_F6] = true, [vkeys.VK_F8] = true}
local tBlockChar = {[116] = true, [84] = true}
local tModKeys = {[vkeys.VK_MENU] = true, [vkeys.VK_SHIFT] = true, [vkeys.VK_CONTROL] = true}
local tBlockNextDown = {}

local tHotKeyData = {
    edit = nil,
	save = {},
   lastTick = os.clock(),
   tickState = false
}
local tKeys = {}

_SETTINGS = {
    HotKey = {
        noKeysMessage = "No"
    }
} 
-- \\ ВСПОМОГАТЕЛЬНЫЕ ФУНКЦИИ:
local ToU32 = imgui.ColorConvertFloat4ToU32
local ToVEC = imgui.ColorConvertU32ToFloat4
local norms = [[Умышленный флуд:
- /hmute от 20 до 40 минут;

Попрошайничество, offtop:
- /hmute от 30 до 60 минут;

Нецензурная лексика:
- /hmute от 60 до 120 минут;

Злоупотребления CapsLock:
- /hmute от 20 до 40 минут;

Оскорбление/троллинг:
- /hmute от 60 до 180 минут (180 минут при очень злостном);

Неадекватное поведение:
- /hmute от 60 до 180 минут (180 минут при злостном);

Оскорбление проекта:
- /hmute от 120 минутах;

Оскорбление/упоминание родителей:
- /hmute от 90 до 180 минут;
- Подача формы на блокировку игрового аккаунта в беседу выдачи наказаний;

Угрозы или шантаж в любых их проявлениях:
- /hmute от 60 до 120 минут;

Панибратское/дерзкое/нахальное обращение:
- /hmute от 60 до 120 минут;

Пропаганда суицида/религий/политики/нации:
- /hmute от 60 до 180 минут (180 минут при злостном);

Транслит:
- /hmute от 20 до 30 минут.
]]
local cars_price = {
    'Внедорожники:',
    'Landstalker - 350.000$',
    'Rancher - 394.800$/588.000$',
    'Huntley - 364.000$',
    'Mesa - 1.052.800$',
    'Yosemite - 327.600$',
    'Jeep Wrangler - 1.470.000$',
    '',
    'Спорт:',
    'Buffalo - 2.506.000$',
    'Club - 966.000$',
    'Banshee - 2.100.000$',
    'Sultan - 1.610.000$',
    'Elegy - 1.274.000$',
    'Sabre - 1.064.000$',
    'ZR-350 - 1.540.000$',
    'Super GT - 1.386.000$',
    'Flash - 1.428.000$',
    'Jester - 1.484.000$',
    'Phoenix - 1.820.000$',
    '',
    'Кабриолеты:',
    'Windsor - 400.400$',
    'Stallion - 327.600$',
    'Comet - 655.200$',
    'Feltzer - 473.200$',
    '',
    'Седаны:',
    'Bravura - 72.744$',
    'Sentinel - 90.930$',
    'Manana - 75.342$',
    'Admiral - 97.425$',
    'Washington - 93.528$',
    'Bobcat - 71.445$',
    'Premier - 77.940$',
    'Previon - 74.043$',
    'Solair - 76.641$',
    'Regina - 74.043$',
    'Elegant - 87.033$',
    'Nebula - 76.641$',
    'Fortune - 80.538$',
    'Cadrona - 77.940$',
    'Willard - 74.043$',
    'Intruder - 80.538$',
    'Primo - 77.940$',
    'Uranus - 97.425$',
    'Merit - 94.827$',
    'Sunrise - 129.900$',
    'Emperor - 107.817$',
    'Glendale - 324.750$',
    'Greenwood - 363.720$',
    'Chevrolet Caprice - 324.750$',
    'OldsMob Cruiser\'89 - 779.400$',
    '',
    'Лоурайдеры:',
    'Slawman - 350.000$',
    'Blade - 324.800$',
    'Savanna - 420.000$',
    'Broadway - 344.400$',
    'Remington - 476.000$',
    'Tahoma - 327.600$',
    'Tornado - 361.200$',
    'Majestic - 350.000$',
    'Voodoo - 308.000$',
    '',
    'Мотоциклы:',
    'Faggio (462) - 8.000$',
    'PCJ-600 (461) - 140.000$',
    'Freeway (463) - 380.000$',
    'FCR-900 (521) - 210.000$',
    'Wayfarer (586) - 80.000$',
    'Sanchez (468) - 140.000$',
    '',
    'Аренда транспорта (Транспортная компания):',
    'Bike - 500$',
    'Faggio - 300$',
    'Bravura - 1.000$',
    'Sentinel - 1.200$',
    'Manana - 1.100$',
    'Admiral - 1.500$',
    'Washington - 1.300$',
    'Bobcat - 1.000$',
    'Premier - 1.100$',
    'Previon - 1.000$',
    'Solair - 1.200$',
    'Regina - 1.000$',
    'Elegant - 1.300$',
    'Nebula - 1.200$',
    'Fortune - 1.300$',
    'Cabrona - 1.300$',
    'Willard - 1.100$',
    'Intruder - 1.300$',
    'Primo - 1.200$',
    'Uranus - 1.500$',
    'Merit - 1.400$',
    'Sunrise - 1.600$',
    'Emperor - 1.400$',
    'Glendale - 2.000$',
    'Greenwood - 2.100$',
    'Landstalker - 1.700$',
    '',
    'Автомобили за донат:',
    'Lincoln Town Car II - 700MC',
    'Cadillac Eldorado - 1.400MC',
    'Corvet C3 - 1.400MC',
    'Toyota Mark II - 4.500MC',
    'BMW E38 750i - 4.500MC',
    'Toyota Crown XI S170 - 4.500MC',
    'Bentley Turbo R - 4.500MC',
    'Ford Explorer 5 - 4.500MC',
    'Mercedes Benz G500 - 6.000MC',
    'Mercedes Benz W140 - 6.000MC',
    'Nizsan Skyline X R34 - 6.000MC',
    'Mercedes Benz 300 SL - 6.000MC',
    'Morgan Aero 7 - 6.000MC',
    'Mercedes Benz GT 63S - 40.000MC',
    'Lamborghini Urus - 40.000MC',
    'Bentley Continental GT - 40.000MC',
    '',
    'Воздушный транспорт:',
    'Sparrow - 900.000$',
    'Maverick - 1.200.000$',
    '',
    'Водный транспорт:',
    'Squallo (446) - 150 bit',
    'Speeder (452) - 150 bit',
    'Tropic (454) - 6.000.000$',
    'Coastguard (472) - 100.000$',
    'Dinghy (473) - 600.000$',
    'Jetmax (493) - 3.000.000$',
    'Launch (595) - 200 bit',
    'Marquis (484) - 10.000.000$',
    '',
    'Велосипеды:',
    'Bike - 10.000$',
    'Mountain Bike - 80.000$',
    'BMX - 100.000$',
    '',
    'Дом на колёсах - 300.000$'
}
local acs_price = {
    "Шапки:",
    "Шапка черного цвета - 400.000$",
    "Шапка болотного цвета - 4 bit",
    "Шапка красного цвета - 4.5 bit",
    "Шапка гандонка - 15 bit",
    "Панамы:",
    "Серая панама - 8 bit",
    "Черная панама - 250.000$",
    "Желто-оранжевая панама - 7 bit",
    "Кепки:",
    "Кепка камуфляж - 400.000$",
    "Кепка волна - 4 bit",
    "Кепка хиппи - 450.000$",
    "Кепка зеленая - 4 bit",
    "Кепка марс - 4 bit",
    "Кепка синяя - 8 bit",
    "Кепка оранжевая - 6 bit",
    "Кепка белая - 800.000$",
    "Кепка красная - 3 bit",
    "Кепка желтая - 300.000$",
    "Кепки задом на перед:",
    "Кепка оранжевая (назад) - 6 bit",
    "Кепка синяя (назад) - 15 bit",
    "Кепка волна (назад) - 25 bit",
    "Кепка черно-желтая (назад) - 1.000.000$",
    "Шляпы:",
    "Шляпа (ковбойская 1) - 35 bit",
    "Шляпа (ковбойская 2) - 1.500.000$",
    "Шляпа (полицейская) - 50 bit",
    "Шляпа (черная) - 30 bit",
    "Шляпа мафиози (черная) - 15 bit",
    "Шляпа мафиози (зеленая) - 15 bit",
    "Шляпа мафиози (синяя) -2.500.000$",
    "Шляпа мафиози (красная) - 15 bit",
    "Шляпа мафиози (желтая) - 15 bit",
    "Бургер - 50 bit",
    "Каски:",
    "Каска (камуфляж) - 400.000$",
    "Каска (лесной камуфляж) - 4 bit",
    "Каска (пустынная) - 5 bit",
    "Каска (розовый) - 5 bit",
    "Каска (хиппи) - 10 bit",
    "Каска (не стреляй в меня) - 1.000.000$",
    "Каска (череп) - 2.500.000$",
    "Каска (черная) - 4 bit",
    "Каска (красная) - 4 bit",
    "Каска (зеленая) - 4 bit",
    "Каска (синяя) - 5 bit",
    "Каска (желтая) - 4 bit",
    "Берет (красный) - 2.000.000$",
    "Берет (бордовый) - 8 bit",
    "Берет (синий) - 8 bit",
    "Берет (камуфляж) - 10 bit",
    "Очки 1 - 10 bit",
    "Очки 2 - 6 bit",
    "Очки 3 - 10 bit",
    "Очки 4 - 15 bit",
    "Очки 5 - 800.000$",
    "Очки 10 - 30 bit",
    "Очки (прозрачные) - 2.500.000$",
    "Очки (черные) - 8 bit",
    "Очки (фиолетовые) - 15 bit",
    "Очки (оранжевые) 1.500.000$",
    "Очки (желтые) - 1.500.000$",
    "Очки (зеленые) - 1.500.000$",
    "Очки (серые) - 1.500.000$",
    'Часы:',
    'Часы 1 - 30 bit',
    'Часы 2 - 10 bit',
    'Часы 3 - 10 bit',
    'Часы 4 - 15 bit',
    'Часы 5 - 2.500.000$',
    'Часы (красные) - 800.000$',
    'Часы (зеленые) - 800.000$',
    'Часы (синие) - 800.000$',
    'Часы 6 - 30 bit',
    'Часы 7 - 30 bit',
    'Часы 8 - 30 bit',
    'Часы 9 - 30 bit',
    'Часы 10 - 30 bit',
    'Часы 11 - 25 bit',
    'Семейные аксессуары:',
    'Шляпа петуха - 1.000.000$',
    'Попугай на плечо - 1.200.000$',
    'Золотые часы - 300.000$',
    'Мексиканская шляпа - 2.000.000$',
    'Банджо - 2.200.000$',
    'Шлем штурмовика - 3.500.000$'
}
local houses_price = {
    'Дом эконом класса:',
    'Цена: 200.000$ - 330.000$',
    'Ком. услуги: 120$/час -158$/час',
    'Дом среднего класса:',
    'Цена: 290.000$ - 4.000.000$',
    'Ком. услуги: 148$/час - 452$/час',
    'Дом высокого класса:',
    'Цена: 800.000$ -1.115.000$',
    'Ком. услуги: 256$/час - 281$/час',
    'Дом элитного класса:',
    'Цена: 3.000.000$ - 27.000.000$',
    'Ком. услуги: 414$/час - 1210$/час'
}

local salary_org = {
    "Полицейский Департамент:",
    "1. Курсант - 9.033$",
    "2. Офицер - 9.320$",
    "3. Детектив-специалист - 9.739$",
    "4. Детектив следователь - 10.430$",
    "5. Сержант - 12.620$",
    "6. Лейтенант - 13.400$",
    "7. Капитан - 14.350$",
    "8. SWAT - 15.150$",
    "9. Капитан SWAT - 16.450$",
    "10. Заместитель комиссара - 17.213$",
    "11. Комиссар полиции - 17.920$",
    "12. Шериф - 18.320$",
    "Федеральное Бюро Расследований:",
    "1. Стажёр - 10.120$",
    "2. Младший агент - 11.310$",
    "3. Агент ФБР - 12.073$",
    "4. Старший агент - 12.637$",
    "5. Специальный агент - 13.109$",
    "6. Секретный агент - 13.808$",
    "7. Агент безопасности - 14.559$",
    "8. Управляющий агентурой - 15.191$",
    "9. Глава Академии ФБР - 15.938$",
    "10. Заместитель главы отдела DEP - 16.341$",
    "11. Глава DEP - 17.043$",
    "12. Заместитель главы CID - 17.495$",
    "13. Глава CID - 18.099$",
    "14. Начальник NS - 18.259$",
    "15. Инспектор - 18.980$",
    "16. Директор - 18.980$",
    "Средства Массовой Информации:",
    "1. Начинающий работник - 5.200$",
    "2. Помощник редакции - 5.888$",
    "3. Светотехник - 6.122$",
    "4. Репортёр - 7.609$",
    "5. Оператор - 8.058$",
    "6. Ведущий - 8.779$",
    "7. Режиссёр - 9.483$",
    "8. Редактор - 10.284$",
    "9. Главный редактор - 11.597$",
    "10. Директор - 13.240$",
    "Больницы:",
    "1. Интерн - 6.550$",
    "2. Фельдшер - 6.950$",
    "3. Участковый врач - 7.350$",
    "4. Терапевт - 8.350$",
    "5. Проктолог - 8.830$",
    "6. Окулист - 9.200$",
    "7. Хирург - 10.350$",
    "8. Заведующий отделением - 11.200$",
    "9. Заместитель главного врача - 12.260$",
    "10. Главный врач - 14.200$",

    "Автошкола:",
    "1. Стажёр - 5.300$",
    "2. Консультант - 5.724$",
    "3. Экзаменатор - 6.183$",
    "4. Младший инструктор - 6.784$",
    "5. Инструктор - 7.333$",
    "6. Менеджер - 8.038$",
    "7. Заместитель директора - 9.208$",
    "8. Директор - 10.553$",

    "Сухопутные войска:",
    "1. Рядовой - 8.420$",
    "2. Младший сержант - 9.224$",
    "3. Сержант - 9.506$",
    "4. Прапорщик - 10.357$",
    "5. Младший лейтенант - 11.089$",
    "6. Лейтенант - 11.917$",
    "7. Старший лейтенант - 12.758$",
    "8. Капитан - 13.832$",
    "9. Майор - 14.763$",
    "10. Подполковник - 15.980$",
    "11. Полковник - 16.716$",
    "12. Генерал - 18.110$",

    "Мэрия:",
    "1. Охранник - 11.240$",
    "2. Начальник охраны - 12.080$",
    "3. Секретарь - 12.840$",
    "4. Пресс-секретарь - 13.500$",
    "5. Адвокат - 14.140$",
    "6. Прокурор - 15.360$",
    "7. Заместитель мэра - 16.150$",
    "8. Мэр - 17.400$"
}

local salary = {
    'ФЕРМА (+1 lvl)',
    'Фермер - 21$.',
    'Комбайнер - 36$',
    'ЗАВОД (+1 lvl)',
    'Сборщик - 67$',
    'Повар - 67$',
    'ШАХТА (+1 lvl)',
    'Покупка кирки:',
    'Кирка 1 lvl - 50$',
    'Кирка 2 lvl - 150$',
    'Кирка 3 lvl - 200$',
    'Кирка 4 lvl - 250$',
    'Кирка 5 lvl - 300$',
    'Заработок:',
    'Переносчик руды - 9$',
    'Железо - 32$',
    'Медь - 35$',
    'Серебро - 40$',
    'Свинец - 43$',
    'Вольфрам - 47$',
    'Уран - 53$',
    'Плутоний - 56$',
    'Платина - 58$',
    'Золото - 66$',
    'Алмазы - 75$',
    'ЛЕСОПИЛКА (+1 lvl)',
    'Грузчик дров - 98$',
    'Дровосек - 157$ (3+ lvl)',
    'Покупка топора:',
    'Обычный топор - 150$',
    'Закаленный топор - 300$',
    'Кованный топор - 700$',
    'ПЛЯЖ (+1 lvl)',
    'Аренда металлоискателя: 30$',
    'Заработок:',
    'Металлическая крышка - 12$',
    'Проволока - 12$',
    'Кольцо обычное - 46$',
    'Кольцо серебряное - 230$',
    'Кольцо золотое - 690$',
    'Цепочка обычная - 46$',
    'Цепочка серебряная - 230$',
    'Цепочка золотая - 690$',
    'Монета обычная - 46$',
    'Монета редкая - 230$',
    'Монета золотая - 690$',
    'Часы - 230$',
    'Серьги обычные - 46$',
    'Серьги серебряные - 230$',
    'Серьги золотые - 690$',
    'Кроненпробка - 12$',
    'Монета серебряная - 230$',
    'Драгоценный камень - 12.000$',
    'ВОДИТЕЛЬ АВТОБУСА (+2 lvl)',
    'Аренда: 200$',
    'Оплата: Стоимость билета 0$-50$',
    'Los Santos (ЛС):',
    'ЛС Автовокзал -> ЖД СФ - 2.345$, на обратном пути - 1.505$',
    'ЛС Автовокзал -> ЖД ЛВ - 2.135$, на обратном пути - 1.960$',
    'ЛС Автовокзал -> Завод ферма Лос-Сантос - 2.975$',
    'San Fierro (СФ):',
    'ЖД СФ -> ЛС Автовокзал - 1.575$, на обратном пути - 2.310$',
    'ЖД СФ -> ЖД ЛВ - 2.905$, на обратном пути - 1.715$',
    'Las Venturas (ЛВ):',
    'ЖД ЛВ -> ЛС Автовокзал - 1.925$, на обратном пути - 2.030$',
    'ЖД ЛВ -> ЖД СФ - 1.750$, на обратном пути - 1.190$',
    'РАЗВОЗЧИК ПИЦЦЫ (+2 lvl)',
    'Аренда мотоцикла: 400$',
    'Заказ на пиццу: 132$',
    'ТАКСИСТ (+3 lvl)',
    'Аренда: 150$',
    'Оплата: 0$ - 350$ за км',
    'ЭЛЕКТРИК (+3 lvl)',
    'Щиток: 550$',
    'РАЗВОЗЧИК ПРОДУКТОВ (+4 lvl)',
    'Аренда: 250$',
    'РАЗВОЗЧИК ТОПЛИВА (+4 lvl)',
    'Аренда: 250$',
    'МЕХАНИК (+4 lvl)',
    'Аренда: 250$',
    'Оплата за ремонт - от 200$ до 700$',
    'Оплата заправки - от 200$ до 600$',
    'РАЗВОЗЧИК ДРОВ (+4 lvl)',
    'Аренда: 300$',
    'Оплата: 2.200$ за 440 кг',
    'ОХОТА (+4 lvl)',
    'Аренда: 800$',
    'Ружьё - 1.700$',
    'Патроны 12/70 - 60 шт. - 500$',
    'Оплата:',
    'Козёл - 812$',
    'Олень - 1.219$',
    'Лось - 1.625$',
    'Медведь - 2.031$',
    "ДАЛЬНОБОЙЩИК (+5 lvl)",
    "Черный фургон - 440 кг",
    "Аренда: 300$",
    "Ферма - 616$",
    "Шахта - 1.276$",
    "Рыба - 1.980$",
    "",
    "Красный фургон - 495 кг",
    "Аренда: 350$",
    "Ферма - 693$",
    "Шахта - 1.436$",
    "Рыба - 2.228$",
    "",
    "Белый фургон - 572 кг",
    "Аренда: 400$",
    "Ферма - 801$",
    "Шахта - 1.659$",
    "Рыба - 2.574$",
    "",
    "КРУПЬЕ (+5 lvl)",
    "2 процентов от ставки за столом",
    "",
    "ЭЛЕКТРОМОНТАЖНИК (+6 lvl)",
    "Аренда: 150$",
    "Оплата: 350$ за одну вышку",
    "",
    "РЫБАК (+7 lvl)",
    "Аренда: 700$",
    "Оплата: 15.000$ за 1000 кг рыбы."
}
local cmds_job = {
    "Команды водителя автобуса:",
    "/end - Закончить рабочий день.",
    "/gps > Работы > [1] - узнать необходимые места.",
    "Команды доставщика пиццы:",
    "/end - Закончить рабочий день.",
    "/gps > Работы > [1] - узнать необходимые места.",
    "Команды таксиста:",
    "/end - закончить рабочий день.",
    "/gps > Работы > [1] - узнать необходимые места.",
    "/accept - принять вызов.",
    "/gotaxi - принять вызов",
    "/wr - рабочая рация",
    "Команды электрика:",
    "/elec - найти сломанный щиток.",
    "Команды лесоруба:",
    "/end - Закончить рабочий день.",
    "/gps > Работы > [1] - узнать необходимые места.",
    "Команды развозчика продуктов:",
    "/end - Закончить рабочий день.",
    "/wr - рабочая рация.",
    "/delivery - список заказов",
    "/gps > Работы > [1] - узнать необходимые места.",
    "Команды механика:",
    "/end - Закончить рабочий день.",
    "/gps > Работы > [1] - узнать необходимые места.",
    "/accept - принять заказ механик.",
    "/gomechanic - принять заказ механик.",
    "/repair - отремонтировать автомобиль.",
    "/refill - заправить чужой автомобиль (механик)",
    "/wr - рабочая рация.",
    "Команды водителя лесовоза:",
    "/end - Закончить рабочий день.",
    "/gps > Работы > [1] - узнать необходимые места.",
    "Команды дальнобойщика:",
    "/end - Закончить рабочий день.",
    "/wr - рабочая рация.",
    "/gps > Работы > [1] - узнать необходимые места.",
    "Команды крупье:",
    "/cjoin - работать крупье у стола.",
    "/stavka - установить сумму ставки.",
    "Команды электромонтажника:",
    "/end - Закончить рабочий день.",
    "/elecstolb - ремонт электровышки.",
    "/wr - рабочая рация.",
    "/findelecstolb - найти электровышку требующую ремонта.",
    '/gps > Работы > [1] - узнать необходимые места.',
    'Команды рыбака:',
    '/end - Закончить рабочий день.',
    '/wr - рабочая рация.',
    '/gps > Работы > [1] - узнать необходимые места.'
}
local enchancements = {
    "Решительность (доступно со 2 уровня)",
    "Данное улучшение позволяет покинуть организацию по собственному желанию.",
    "Команда: /leave",
    "Цена: 30.000$",
    "Проворство",
    "Вы сможете воровать ресурсы с разных работ и продавать их у торговцев.",
    "Цена: стоимость 1.000$.",
    "Карманы (малые)",
    "Данное улучшение увеличивает лимит вместимости инвентаря.",
    "Вес: +3 кг, Объём: +1 см",
    "Цена: 5.000$",
    "Карманы (средние)",
    "Данное улучшение увеличивает лимит вместимости инвентаря.",
    "Вес: +5 кг, Объём: +2 см",
    "Цена: 10.000$",
    "Карманы (большие)",
    "Данное улучшение увеличивает лимит вместимости инвентаря.",
    "Вес: +8 кг, Объём: +4 см",
    "Цена: 15.000$"
}
local fence = {
    "Рыба:",
    "Стоимость за 1 шт: 187$",
    "",
    "Предохранитель:",
    "Стоимость за 1 шт: 37$",
    "",
    "Стальной провод:",
    "Стоимость за 1 шт: 76$",
    "",
    "Пшено:",
    "Стоимость за 1 шт: 25$",
    "",
    "Драгоценная руда:",
    "Стоимость за 1 шт: 25$",
    "",
    "Детали:",
    "Стоимость за 1 шт: 25$",
    "",
    "Соус:",
    "Стоимость за 1 шт: 25$"
}
local table_events = {
    "Дерби:",
    "11:00 15:00 19:00",
    "Страйкбол:",
    "12:00 16:00 20:00",
    "Мотогонки:",
    "13:00 17:00 21:00",
    "Картинг:",
    "14:00 18:00 22:00"
}
local donate = {
    "Игровая валюта:",
    "1МС = 1.000$",
    "",
    "Транспорт:",
    "Lincoln Town Car II - 700 MC",
    "Corvet C3 - 1.400 MC",
    "Cadillac Eldorado - 1.400 MC",
    "BMW E38 750i - 4.500 MC",
    "Bentley Turbo R - 4.500 MC",
    "Toyota Mark II - 4.500 MC",
    "Toyota Crown XI - 4.500 MC",
    "Ford Explorer 5 - 4.500 MC",
    "",
    "Mercedes Benz G500 - 6.000 MC",
    "Mercedes Benz W140 - 6.000 MC",
    "Mercedes Benz 300 SL - 6.000 MC",
    "Nissan Skyline X R34 - 6.000 MC",
    "Morgan Aero 7 - 6.000 MC",
    "Mercedes GT 635 - 40.000 MC",
    "Lamborghini Urus - 40.000 MC",
    "Bentley Continental GT - 40.000 MC",
    "",
    "Одежда (скины):",
    "12617 - 500 МС",
    "12590",
    "12611",
    "12621",
    "12626",
    "12609",
    "",
    "12591 - 1.200 МС",
    "12592",
    "12620",
    "12595",
    "12610",
    "",
    "12588 - 1.800 МС",
    "12599",
    "12612",
    "12616",
    "",
    "12586 - 5.500 МС",
    "12597",
    "12618",
    "",
    "12587 - 11.000 МС",
    "12614",
    "",
    "Аксессуары",
    "Очки ученого - 300 МС",
    "Скейтборд зеленый - 300 МС",
    "Скейтборд голубой - 300 МС",
    "Скейтборд желто-полосатый - 300 МС",
    "Скейтборд желтый - 300 МС",
    "Скейтборд оранжевый - 300 МС",
    "Енот - 300 МС",
    "",
    "Шляпа исследователя - 800 МС",
    "Маска с капюшоном - 800 МС",
    "Синий детский рюкзак - 800 МС",
    "Скейтборд оранжевый с текстом - 800 МС",
    "Скейтборд с оранжевым черепом - 800 МС",
    "Подвеска \"Лицо\" - 1.500 МС",
    "Подвеска \"Лицо гориллы\" - 1.500 МС",
    "Подвеска \"West Coast\" - 1.500 МС",
    "Подвеска DS - 1.500 МС",
    "Подвеска \"Череп\" - 1.500 МС",
    "Футляр из под гитары - 4.000 МС",
    "Бандана черная на рот - 4.000 МС",
    "Черная тактическая маска - 4.000 МС",
    "Старый рюкзак - 4.000 МС",
    "Ковбойский револьвер - 8.000 МС",
    "Маска Иллидана - 8.000 МС",
    "Ядерный чемоданчик - 8.000 МС",
    '',
    'Анимации',
    "Поза Т - 100 МС",
    "Спящий зомби - 100 МС",
    "Игра в теннис - 100 МС",
    "Танец - 200 МС",
    "Танец - 200 МС",
    "Обруч - 200 МС",
    "Насмешка - 600 МС",
    "Походка робота - 600 МС",
    "Походка зомби - 600 МС",
    '',
    'Навыки и лицензии',
    "Лицензии судоходство, полёты на 150 PD - 100 MC",
    "Лицензии охоты и рыбалки - 200 МС",
    "Комплект Работяга (ферма) - 300 МС",
    "Комплект Стрелок - 900 МС",
    "Комплект Электро - 1200 МС",
    "Комплект Шахтёра - 1399 МС",
    '',
    'Расширения',
    "До 3-х слотов транспорта - 699 МС",
    "До 4-х слотов транспорта - 1299 МС",
    "До 5-ти слотов транспорта - 2299 МС",
    "До 2-х слотов бизнеса - 1399 МС",
    '',
    'Доп. услуги',
    "Смена никнейма (имени персонажа) - 20 МС",
    "Полная законопослушность 50/50 - 59 МС",
    "Вылечиться от наркозависимости - 99 МС",
    "Снять предупреждение/варн - 199 МС",
    "Заморозка сытости на 31 день - 699 МС",
    '',
    'Улучшения для бизнеса:',
    "Охрана - 15.000$.",
    "Пожар.сигнализация - 15.000$.",
    "Коммуникация - 15.000$.",
    "Онлайн бухгалтерия - 15.000$.",
    "Экспресс закупка - 50.000$.",
    "Вместимость склада - 125.000$.",
    'Отображение в навигаторе - 150.000$.',
    'Оптимизация налогов - 750.000$'
}
local vips = {
    "VIP бронза на 31 день - 199 МС:",
    "1) 15.000$ наличными",
    "2) голод уходит на 20 процентов медленнее",
    "3) лечение на 10 процентов быстрее",
    "4) время в тюрьме на 10 процентов быстрее",
    "5) з/п на начальных работах на 10 процентов больше",
    "6) объем инвентаря увеличен 12 см",
    "7) вес инвентаря увеличен на 6 кг",
    "8) покупка до 10 аптечек в дом",
    "",
    "VIP сильвер на 31 день - 399 МС:",
    "1) 30.000$ наличными",
    "2) голод уходит на 30 процентов медленнее",
    "3) лечение на 15 процентов быстрее",
    "4) время в тюрьме на 50 процентов быстрее",
    "5) з/п на начальных работах на 15 процентов больше",
    "6) объем инвентаря увеличен 20 см",
    "7) вес инвентаря увеличен на 10 кг",
    "8) покупка до 15 аптечек в дом",
    "9) можно подселить 3 жильца в дом",
    "",
    "VIP голд на 31 день - 799 МС:",
    "1) 75.000$ наличными",
    "2) голод уходит на 40 процентов медленнее",
    "3) лечение на 20 процентов быстрее",
    "4) время в тюрьме на 100 процентов быстрее",
    "5) з/п на начальных работах на 25 процентов больше",
    "6) объем инвентаря увеличен 40 см",
    "7) вес инвентаря увеличен на 20 кг",
    "8) покупка до 20 аптечек в дом",
    "9) можно подселить 4 жильца в дом",
    "10) 4 скина в шкаф дома",
    "11) каждый третий PayDay +1exp",
    "12) чат для всех ВИП голд /vg",
    "13) скилы качаются на 10 процентов быстрее",
    "14) сила и выносливость качаются на 10 процентов быстрее",
    "15) 3 скина в шкаф дома",
    "",
    "VIP платинум на 31 день - 1399 МС:",
    "1) 150.000$ наличными",
    "2) голод уходит на 50 процентов медленнее",
    "3) лечение на 35 процентов быстрее",
    "4) время в тюрьме на 200 процентов быстрее",
    "5) з/п на начальных работах на 25 процентов больше",
    "6) объем инвентаря увеличен 60 см",
    "7) вес инвентаря увеличен на 30 кг",
    "8) покупка до 25 аптечек в дом",
    "9) можно подселить 4 жильца в дом",
    "10) 4 скина в шкаф дома",
    "11) каждый второй PayDay +1exp",
    "12) чат для всех ВИП платинум /vp",
    "13) скилы качаются на 20 процентов быстрее",
    "14) сила и выносливость качаются на 20 процентов быстрее",
    "15) стили боя качаются на 20 процентов быстрее"
}
local fams = {
    "Создание семьи - 2.000.000$",
    '',
    "Передача прав лидера семьи:",
    "Передача прав лидера семьи 1 уровня - 2.500.000$",
    "Передача прав лидера семьи 2 уровня - 3.500.000$",
    "Передача прав лидера семьи 3 уровня - 5.000.000$",
    "Передача прав лидера семьи 4 уровня - 7.000.000$",
    "Смена названия семьи - 700.000$",
    '',
    "Вместимость участников семьи:",
    "Семья 1-го уровня - максимальное количество участников 12 (2 заместителя).",
    "Семья 2-го уровня - максимальное количество участников 20 (2 заместителя).",
    "Семья 3-го уровня - максимальное количество участников 20 (3 заместителя).",
    "Семья 4-го уровня - максимальное количество участников 30 (4 заместителя).",
    '',
    "Вместимость автопарка семьи:",
    "1 уровень - 4 транспортных средств.",
    "2 уровень - 6 транспортных средств.",
    "3 уровень - 8 транспортных средств.",
    "4 уровень - 10 транспортных средств.",
    '',
    "Улучшения семьи:",
    "С 1 на 2 уровень семьи - 1.000.000$",
    "С 2 на 3 уровень семьи - 1.500.000$",
    "С 3 на 4 уровень семьи - 2.500.000$",
    '',
    "Команды семьи:",
    "/fr - чат семьи.",
    "/frn - nonRP чат семьи.",
    "/fcars - автопарк семьи.",
    "/frc - зареспавнить авто семьи.",
    "/frank - изменить ранг члена семьи.",
    "/fmute - выдать бан семейного чата.",
    "/funmute - снять бан семейного чата.",
    "/flock - открыть/закрыть транспорт.",
    "/fclose - открыть/закрыть склад.",
    "/fvig - выдать выговор участнику семьи.",
    "/funvig - снять выговор участнику семьи."
}
local cmds_org = {
    "Команды сотрудников Больницы:",
    "/r - RP рация фракции.",
    "/rn - NonRP рация фракции.",
    "/d - RP рация департамента.",
    "/dn - NonRP рация департамента.",
    "/gnews - гос. новости.",
    "/heal [ID] - лечить игрока.",
    "/givemed [ID] - выдать медкарту",
    "/changesex [ID] - сменить пол игрока.",
    "/gopatrule - начать патрулирование.",
    "/offpatrule - прекратить патрулирование.",
    "/udo - показать удостоверение.",
    "/wpanel - фракционная статистика.",
    "/members - онлайн фракции.",
    '',
    "Команды сотрудников Автошколы:",
    "/gnews - гос. новости.",
    "/salelic - продать лицензию.",
    "/udo - показать удостоверение.",
    "/wpanel - фракционная статистика.",
    "/members - онлайн фракции.",
    '',
    "Команды бандитов:",
    "/f - RP рация банды.",
    "/fn - NonRP рация банды.",
    "/capture - начать захват территории.",
    "/sellgun - продать оружие.",
    "/selldrugs - продать наркотики.",
    "/orderdrugs - заказать наркотики.",
    "/band - надеть бандану.",
    "/clotheskin - надеть военную форму.",
    "/members - онлайн фракции.",
    '',
    "Команды Картелей/Байкеров:",
    "/selldrugs - продать марихуану.",
    "/orderlist - список заказчиков",
    "/load - начать загрузку боеприпасов в авто.",
    "/cload - начать загрузку травы в авто.",
    "/cwar - объявить войну за плантацию.",
    "/sellgun - продать оружие.",
    "/darknet - черный рынок.",
    "/bind - связать игрока.",
    "/unbind - развязать игрока.",
    "/gag - вставить игроку кляп.",
    "/ungag - вытащить кляп у игрока.",
    "/bag - одеть мешок на игрока.",
    "/unbag - снять мешок с игрока.",
    "/cput - посадить игрока в машину.",
    "/cout - вытащить игрока с машины.",
    "/convoy - взять игрока под конвой/отпустить игрока.",
    "/stealcar - взломать транспорт (Только Байкеры).",
    "/sellweapon - продать оружие в руках (Только Байкеры).",
    "/members - онлайн фракции.",
    '',
    'Команды сотрудников Полиции/ФБР:',
    '/gnews - гос.новости.',
    '/udost (/ud) - показать удостоверение.',
    '/m - служебный мегафон.',
    '/frisk - обыскать.',
    '/take - изъять лицензии.',
    '/ticket - выписать штраф.',
    '/cput - затолкать игрока в авто.',
    '/cout - высадить игрока в полицейский участок.',
    '/cuff - одеть наручники.',
    '/uncuff - снять наручники.',
    '/clear - снять розыск.',
    '/su - подать в розыск.',
    '/wanted - список подозреваемых.',
    '/convoy - взять игрока под конвой.',
    '/arrest - провести арест.',
    '/carnumber (/cn) - узнать номер автомобиля.',
    '/pfine - отправить транспорт на штрафстоянку.',
    '/break - выбить дверь дома.',
    '/watchsafe - посмотреть содержимое сейфа.',
    '/gopatrule - начать патрулирование.',
    '/offpatrule - прекратить патрулирование.',
    '/wpanel - фракционная статистика.',
    '/ctrunk - открыть багажник Т/С.',
    '/zap - запретить выход из игры.',
    '/chsafe - открыть сейф в семейном доме.',
    '/pull - вытащить игрока из автомобиля.',
    '/giveorder - выдать ордер.',
    '/setbarricade - установить заграждение.',
    '/delbarricade - убрать заграждение.',
    '/delallbarricade - убрать все заграждения.',
    '/strob - включить стробоскопы у служебного транспорта.',
    '/members - онлайн фракции.',
    '/givepass - выдать пропуск (Только ФБР).',
    '/setlegend - скрыть ник (Только ФБР).',
    '/stoplegend - вернуть ник (Только ФБР).',
    '',
    "Команды сотрудников СМИ:",
    "/dial - меню эфиров.",
    "/edit - меню объявлений.",
    "/udo - показать удостоверение.",
    "/wpanel - фракционная статистика.",
    "/members - онлайн фракции.",
    "",
    "Команды сотрудников Сухопутных Войск:",
    "/gnews - гос. новости.",
    "/ammolist - список складов.",
    "/banish - выгнать из военкомата.",
    "/gopatrule - начать патрулирование.",
    "/offpatrule - прекратить патрулирование.",
    "/udo - показать удостоверение.",
    "/wpanel - фракционная статистика.",
    "/members - онлайн фракции.",
    "",
    "Команды сотрудников Мэрии:",
    "/gnews - гос. новости.",
    "/free - освободить заключённого.",
    "/udo - показать удостоверение.",
    "/salelic - продать разрешение на ТП.",
    "/lots - список заявок на размещение в торговой площадке",
    "/kickout - выгнать из мэрии.",
    "/members - онлайн фракции.",
    "",
    "Команды лидеров/заместителей:",
    "/lpanel (/lp) - панель лидера.",
    "/invite - принять игрока.",
    "/rc - заспавнить фракционный транспорт.",
    "/uninvite - уволить игрока.",
    "/rank - изменить ранг игрока.",
    "/vig - выдать выговор игроку.",
    "/unvig - снять выговор игроку.",
    "/givedress - выдать персональную форму.",
    "/addvacancy - создать вакансию.",
    "/giveprize - выдать премию.",
    "/loweprize - понизить зарплату.",
    "/unloweprize - отменить понижение зарплаты.",
    "/offloweprize - понизить зарплату (Offline).",
    "/offunloweprize - отменить понижение зарплаты (Offline).",
    "",
    "Команды подразделений фракций:",
    '/pp - панель подразделения.',
    '/pmembers - члены подразделения в сети.',
    '/pinvite - пригласить члена фракции в подразделение.',
    '/puninvite - уволить члена фракции из подразделения.'
}
local cmds = {
    'Основные команды:',
    '/menu (/mm) - основное меню.',
    '/myid - узнать свой id.',
    '/myhistory - история наказаний.',
    '/online (/onl) - узнать текущий онлайн игроков на сервере.',
    '/id - узнать id игрока по его нику.',
    '/gps - навигатор.',
    '/setspawn - изменить место появления.',
    '/phone - телефон.',
    '/phonebook (/pb) - телефонная книжка.',
    '/call - позвонить.',
    '/sms - написать сообщение.',
    '/pay - передать деньги игроку.',
    '/sellbitcoins - продать биткоины игроку.',
    '/ask - задать вопрос Хелперам.',
    '/report (/rep) - пожаловаться на игрока.',
    '/ad - подать новостное обьявление.',
    '/sellskin - продать одежду игроку.',
    '/speedlimit (/sl) - включить лимит скорости.',
    '/dropdrugs - выбросить наркотики.',
    '/pass - показать паспорт.',
    '/lic - показать лицензии.',
    '/mcard - показать военный билет.',
    '/hi - поздороваться с игроком.',
    '/binder - меню биндера.',
    '/coin - подбросить монетку.',
    '/vacancy - список вакансий в организации.',
    '/smoke - курить.',
    '/race - уличная гонка.',
    '/racelist - список трасс.',
    '/medcard - показать медкарту.',
    '/wbook - показать трудовую книгу.',
    '/blacklist - добавить контакт в черный список.',
    '/showblacklist - просмотр черного списка.',
    '/inv - открыть инвентарь.',
    '/invt - предложить торговлю.',
    '/invinfo - полная информация по командам инвентаря.',
    '/invsmall - список мелких предметов инвентаря.',
    '/food - съесть еду.',
    '/pick - забрать предмет.',
    '/skill - посмотреть свои скиллы.',
    'Команды только для ПК:',
    '/fontsize - установить размер текста.',
    '/pagesize - установить количество строк в чате.',
    '/timestamp - показать местное время перед сообщениями в чате.',
    '/headmove - заблокировать движение головой.',
    '',
    'Команды чата:',
    '/me - действие от первого лица.',
    '/do - действие от третьего лица.',
    '/todo - фраза во время действия.',
    '/try - попытка действия.',
    '/ame - действие от первого лица (без вывода в чат).',
    '/s - крикнуть.',
    '/w - сказать шепотом.',
    '/n(/b) - NonRP чат.',
    '',
    'Команды транспорта:',
    '/cars - меню личного транспорта.',
    '/park - припарковать транспорт.',
    '/sellcar - продать автомобиль.',
    '/sellcarbit - продать автомобиль за Биткоин.',
    '/tradecar - обменяться автомобилями.',
    '/lock - открыть/закрыть транспорт.',
    '/pts - показать ПТС на свой автомобиль.',
    '/trunk - багажник.',
    '',
    'Команды дома:',
    '/hmenu - меню дома.',
    '/hlock - открыть/закрыть дом.',
    '/hradio - управление аудиосистемой дома.',
    '/findhouse - найти дом.',
    '/sellhouse - продать дом.',
    '',
    'Команды дома на колесах:',
    '/mhmenu - меню дома на колесах.',
    '/invmh - инвентарь дома на колесах.',
    '/mhinfo - информацию о доме на колесах.',
    '/mhenter - зайти в дом на колесах.',
    '/mhexit - выйти из дома на колесах.',
    '',
    'Команды бизнеса:',
    '/bmenu (/bm) - открыть меню бизнеса.',
    '/sellbiz [id] [Цена] - продать бизнес игроку.',
    '/buybiz - купить бизнесс.',
    '/showsales - статистика продаж бизнеса за неделю (финка).',
    'Команды сотрудников Больницы:',
    '/r - RP рация фракции.',
    '/rn - NonRP рация фракции.',
    '/d - RP рация департамента.',
    '/dn - NonRP рация департамента.',
    '/gnews - гос. новости.',
    '/heal [ID] - лечить игрока.',
    '/givemed [ID] - выдать медкарту',
    '/changesex [ID] - сменить пол игрока.',
    '/gopatrule - начать патрулирование.',
    '/offpatrule - прекратить патрулирование.',
    '/udo - показать удостоверение.',
    '/wpanel - фракционная статистика.',
    '/members - онлайн фракции.',
    '',
    'Команды сотрудников Автошколы:',
    '/gnews - гос. новости.',
    '/salelic - продать лицензию.',
    '/udo - показать удостоверение.',
    '/wpanel - фракционная статистика.',
    '/members - онлайн фракции.',
    '',
    'Команды бандитов:',
    '/f - RP рация банды.',
    '/fn - NonRP рация банды.',
    '/capture - начать захват территории.',
    '/sellgun - продать оружие.',
    '/selldrugs - продать наркотики.',
    '/orderdrugs - заказать наркотики.',
    '/band - надеть бандану.',
    '/clotheskin - надеть военную форму.',
    '/members - онлайн фракции.',
    '',
    'Команды Картелей/Байкеров:',
    '/selldrugs - продать марихуану.',
    '/orderlist - список заказчиков',
    '/load - начать загрузку боеприпасов в авто.',
    '/cload - начать загрузку травы в авто.',
    '/cwar - объявить войну за плантацию.',
    '/sellgun - продать оружие.',
    '/darknet - черный рынок.',
    '/bind - связать игрока.',
    '/unbind - развязать игрока.',
    '/gag - вставить игроку кляп.',
    '/ungag - вытащить кляп у игрока.',
    '/bag - одеть мешок на игрока.',
    '/unbag - снять мешок с игрока.',
    '/cput - посадить игрока в машину.',
    "/cout - вытащить игрока с машины.",
    "/convoy - взять игрока под конвой/отпустить игрока.",
    "/stealcar - взломать транспорт (Только Байкеры).",
    "/sellweapon - продать оружие в руках (Только Байкеры).",
    "/members - онлайн фракции.",
    '',
    'Команды сотрудников Полиции/ФБР:',
    '/gnews - гос.новости.',
    '/udost (/ud) - показать удостоверение.',
    '/m - служебный мегафон.',
    '/frisk - обыскать.',
    '/take - изъять лицензии.',
    '/ticket - выписать штраф.',
    '/cput - затолкать игрока в авто.',
    '/cout - высадить игрока в полицейский участок.',
    '/cuff - одеть наручники.',
    '/uncuff - снять наручники.',
    '/clear - снять розыск.',
    '/su - подать в розыск.',
    '/wanted - список подозреваемых.',
    '/convoy - взять игрока под конвой.',
    '/arrest - провести арест.',
    '/carnumber (/cn) - узнать номер автомобиля.',
    '/pfine - отправить транспорт на штрафстоянку.',
    '/break - выбить дверь дома.',
    '/watchsafe - посмотреть содержимое сейфа.',
    '/gopatrule - начать патрулирование.',
    '/offpatrule - прекратить патрулирование.',
    '/wpanel - фракционная статистика.',
    '/ctrunk - открыть багажник Т/С.',
    '/zap - запретить выход из игры.',
    '/chsafe - открыть сейф в семейном доме.',
    '/pull - вытащить игрока из автомобиля.',
    '/giveorder - выдать ордер.',
    '/setbarricade - установить заграждение.',
    '/delbarricade - убрать заграждение.',
    '/delallbarricade - убрать все заграждения.',
    '/strob - включить стробоскопы у служебного транспорта.',
    '/members - онлайн фракции.',
    '/givepass - выдать пропуск (Только ФБР).',
    '/sellweapon - продать оружие в руках (Только Байкеры).',
    '/stealcar - взломать транспорт (Только Байкеры).',
    '',
    "Команды сотрудников СМИ:",
    "/dial - меню эфиров.",
    "/edit - меню объявлений.",
    "/udo - показать удостоверение.",
    "/wpanel - фракционная статистика.",
    "/members - онлайн фракции.",
    "",
    "Команды сотрудников Сухопутных Войск:",
    "/gnews - гос. новости.",
    "/ammolist - список складов.",
    "/banish - выгнать из военкомата.",
    "/gopatrule - начать патрулирование.",
    "/offpatrule - прекратить патрулирование.",
    "/udo - показать удостоверение.",
    "/wpanel - фракционная статистика.",
    "/members - онлайн фракции.",
    "",
    "Команды сотрудников Мэрии:",
    "/gnews - гос. новости.",
    "/free - освободить заключённого.",
    "/udo - показать удостоверение.",
    "/salelic - продать разрешение на ТП.",
    "/lots - список заявок на размещение в торговой площадке",
    "/kickout - выгнать из мэрии.",
    "/members - онлайн фракции.",
    "",
    "Команды лидеров/заместителей:",
    "/lpanel (/lp) - панель лидера.",
    "/invite - принять игрока.",
    "/rc - заспавнить фракционный транспорт.",
    "/uninvite - уволить игрока.",
    "/rank - изменить ранг игрока.",
    "/vig - выдать выговор игроку.",
    "/unvig - снять выговор игроку.",
    "/givedress - выдать персональную форму.",
    "/addvacancy - создать вакансию.",
    "/giveprize - выдать премию.",
    "/loweprize - понизить зарплату.",
    "/unloweprize - отменить понижение зарплаты.",
    "/offloweprize - понизить зарплату (Offline).",
    "/offunloweprize - отменить понижение зарплаты (Offline).",
    "",
    "Команды подразделений фракций:",
    '/pp - панель подразделения.',
    '/pmembers - члены подразделения в сети.',
    '/pinvite - пригласить члена фракции в подразделение.',
    '/puninvite - уволить члена фракции из подразделения.',
    '',
    "Команды водителя автобуса:",
    "/end - Закончить рабочий день.",
    "/gps > Работы > [1] - узнать необходимые места.",
    "Команды доставщика пиццы:",
    "/end - Закончить рабочий день.",
    "/gps > Работы > [1] - узнать необходимые места.",
    "Команды таксиста:",
    "/end - закончить рабочий день.",
    "/gps > Работы > [1] - узнать необходимые места.",
    "/accept - принять вызов.",
    "/gotaxi - принять вызов",
    "/wr - рабочая рация",
    "Команды электрика:",
    "/elec - найти сломанный щиток.",
    "Команды лесоруба:",
    "/end - Закончить рабочий день.",
    "/gps > Работы > [1] - узнать необходимые места.",
    "Команды развозчика продуктов:",
    "/end - Закончить рабочий день.",
    "/wr - рабочая рация.",
    "/delivery - список заказов",
    "/gps > Работы > [1] - узнать необходимые места.",
    "Команды механика:",
    "/end - Закончить рабочий день.",
    "/gps > Работы > [1] - узнать необходимые места.",
    "/accept - принять заказ механик.",
    "/gomechanic - принять заказ механик.",
    "/repair - отремонтировать автомобиль.",
    "/refill - заправить чужой автомобиль (механик)",
    "/wr - рабочая рация.",
    "Команды водителя лесовоза:",
    "/end - Закончить рабочий день.",
    "/gps > Работы > [1] - узнать необходимые места.",
    "Команды дальнобойщика:",
    "/end - Закончить рабочий день.",
    "/wr - рабочая рация.",
    "/gps > Работы > [1] - узнать необходимые места.",
    "Команды крупье:",
    "/cjoin - работать крупье у стола.",
    "/stavka - установить сумму ставки.",
    "Команды электромонтажника:",
    "/end - Закончить рабочий день.",
    "/elecstolb - ремонт электровышки.",
    "/wr - рабочая рация.",
    "/findelecstolb - найти электровышку требующую ремонта.",
    '/gps > Работы > [1] - узнать необходимые места.',
    'Команды рыбака:',
    '/end - Закончить рабочий день.',
    '/wr - рабочая рация.',
    '/gps > Работы > [1] - узнать необходимые места.'
}
local ask = {
    aName = '',
    aID = '',
    Text = ''
}
local answer = new.char[256]()
local autoanswer = new.bool(mainIni.settings.autoanswer)
local autoopenanswer = new.bool(mainIni.settings.autoopenanswer)
imgui.OnInitialize(function()
    imgui.GetIO().IniFilename = nil
    imgui.DarkTheme()
    logo = imgui.CreateTextureFromFile(getGameDirectory().. '\\moonloader\\HelperTools\\main.png')
    imgui.GetIO().IniFilename = nil
    local config = imgui.ImFontConfig()
    config.MergeMode = true
    config.PixelSnapH = true
    iconRanges = imgui.new.ImWchar[3](faicons.min_range, faicons.max_range, 0)
    imgui.GetIO().Fonts:AddFontFromMemoryCompressedBase85TTF(faicons.get_font_data_base85('solid'), 14, config, iconRanges)
end)

local windowFrame = imgui.OnFrame(
    function() return renderWindow[0] end,
    function(player)
        player.HideCursor = true
        local resX, resY = getScreenResolution()
        local sizeX, sizeY = 600, 400
        imgui.SetNextWindowPos(imgui.ImVec2(resX / 2, resY / 2), imgui.Cond.FirstUseEver, imgui.ImVec2(0.5, 0.5))
        imgui.SetNextWindowSize(imgui.ImVec2(sizeX, sizeY), imgui.Cond.FirstUseEver)
        imgui.Begin(u8'Helper Tools', renderWindow, imgui.WindowFlags.NoCollapse + imgui.WindowFlags.NoResize + imgui.WindowFlags.NoTitleBar)
        imgui.SetCursorPosX(imgui.GetWindowSize().x-50)
        imgui.CloseButton('Button close Main Window', renderWindow)
        imgui.Hint('Close Main Window', u8'Закрыть')
        imgui.SameLine()
        imgui.SetCursorPosX(imgui.GetWindowSize().x / 2 - 320/1.3 / 2)
        imgui.Image(logo, imgui.ImVec2(320/1.3, 170/1.3))
        imgui.Separator()
        imgui.BeginChild('##MAIN_CHILD1', imgui.ImVec2(292, 250), true)
        imgui.CenterText(u8'Настройки')
        imgui.Separator()
        imgui.Text(u8'Открыть вопрос сразу')
        imgui.SameLine()
        imgui.SetCursorPosX(260)
        if imgui.Checkbox('##autoopenanswer', autoopenanswer) then
            mainIni.settings.autoopenanswer = autoopenanswer[0]
            inicfg.save(mainIni, directIni)
        end
        imgui.Text(u8'Открыть вопрос')
        imgui.SameLine()
        imgui.SetCursorPosX(235)
        if imgui.HotKey("##hask", hask, 50, 25, false) then
            rkeys.changeHotKey(bindHask, hask.v)
            mainIni.settings.hask = encodeJson(hask.v)
            if inicfg.save(mainIni, directIni) then
                AddChatMessage('Конфиг успешно сохранен', 3)
            else
                AddChatMessage('Что-то пошло не так, конфиг не сохранён!', 2)
                AddChatMessage('Перезагружаю скрипт..', 2)
                thisScript():reload()
            end
        end
        imgui.Text(u8'Автодополнение ответа')
        imgui.SameLine()
        imgui.SetCursorPosX(260)
        if imgui.Checkbox('##autoanswer', autoanswer) then
            mainIni.settings.autoanswer = autoanswer[0]
            inicfg.save(mainIni, directIni)
        end
        imgui.EndChild()
        imgui.SameLine()
        imgui.BeginChild('##MAIN_CHILD2', imgui.ImVec2(292, 250), true)
        imgui.CenterText(u8'Настройки информации о моде')
        imgui.Separator()
        imgui.EndChild()
        imgui.End()
    end
)
local search_cmds = new.char[256]()
local search_cmds_org = new.char[256]()
local search_fam = new.char[256]()
local search_vips = new.char[256]()
local search_donate = new.char[256]()
local search_cars_price = new.char[256]()
local search_acs_price = new.char[256]()
local search_cmds_job = new.char[256]()
local search_salary = new.char[256]()
local search_salary_org = new.char[256]()
local search_eggs = new.char[256]()
local search_info_of_update = new.char[256]()
local gps = {
    main = {
        {'[1] Мэрия ЛС', '/gps -> Основные -> Мэрия ЛС'},
        {'[2] Мэрия СФ', '/gps -> Основные -> Мэрия СФ'},
        {'[3] Мэрия ЛВ', '/gps -> Основные -> Мэрия ЛВ'},
        {'[4] Автошкола', '/gps -> Основные -> Автошкола'},
        {'[5] Банк ЛС', '/gps -> Основные -> Банк ЛС'},
        {'[6] Банк СФ', '/gps -> Основные -> Банк СФ'},
        {'[7] Банк ЛВ', '/gps -> Основные -> Банк ЛВ'},
        {'[8] Больница ЛС', '/gps -> Основные -> Больница ЛС'},
        {'[9] Больница СФ', '/gps -> Основные -> Больница СФ'},
        {'[10] Больница ЛВ', '/gps -> Основные -> Больница ЛВ'},
        {'[11] Военкомат', '/gps -> Основные -> Военкомат'},
        {'[12] Церковь', '/gps -> Основные -> Церковь'},
        {'[13] Ближайший банкомат', '/gps -> Основные -> Ближайший банкомат'},
        {'[14] Магазин аксессуаров', '/gps -> Основные -> Магазин аксессуаров'},
        {'[15] Контейнеры', '/gps -> Основные -> Контейнеры'},
        {'[16] Центральный рынок', '/gps -> Основные -> Центральный рынок'},
        {'[17] Склад ЛС', '/gps -> Основные -> Склад ЛС'},
        {'[18] Склад СФ', '/gps -> Основные -> Склад СФ'},
        {'[19] Склад ЛВ', '/gps -> Основные -> Склад ЛВ'}
    },
    jobs = {
        {'[1] Выбранная работа в Мэрии', '/gps -> Работы -> Выбранная работа в Мэрии'},
        {'[2] Ферма', '/gps -> Работы -> Ферма'},
        {'[3] Завод', '/gps -> Работы -> Завод'},
        {'[4] Шахта', '/gps -> Работы -> Шахта'},
        {'[5] Лесопилка', '/gps -> Работы -> Лесопилка'},
        {'[6] Пляж', '/gps -> Работы -> Пляж'},
        {'[7] Ремонтник дорог', '/gps -> Работы -> Ремонтник дорог'}
    },
    transport = {
        {'[1] Покупка авто', '/gps -> Транспорт -> Покупка авто'},
        {'[2] Аренда авто ЛС', '/gps -> Транспорт -> Аренда авто ЛС'},
        {'[3] Аренда авто СФ', '/gps -> Транспорт -> Аренда авто СФ'},
        {'[4] Аренда авто ЛВ', '/gps -> Транспорт -> Аренда авто ЛВ'},
        {'[5] Аренда мото ЛС', '/gps -> Транспорт -> Аренда мото ЛС'},
        {'[6] Аренда мото СФ', '/gps -> Транспорт -> Аренда мото СФ'},
        {'[7] Аренда мото ЛВ', '/gps -> Транспорт -> Аренда мото ЛВ'},
        {'[8] Тюнинг салон', '/gps -> Транспорт -> Тюнинг салон'},
        {'[9] Штрафстоянка', '/gps -> Транспорт -> Штрафстоянка'},
        {'[10] Штрафстоянка семейного транспорта', '/gps -> Транспорт -> Штрафст. сем. трансп.'},
        {'[11] Б/У авторынок', '/gps -> Транспорт -> Б/У авторынок'},
        {'[12] Водный Б/У авторынок', '/gps -> Транспорт -> Водный Б/У авторынок'},
        {'[13] СТО', '/gps -> Транспорт -> СТО'},
        {'[14] Утилизация', '/gps -> Транспорт -> Утилизация'},
        {'[15] Утилизация (водная)', '/gps -> Транспорт -> Утилизация (водная)'}
    },
    nearest_businesses = {
        {'Найти бизнес по его номеру', '/gps -> Ближайшие бизнесы -> Найти бизнес по его номеру'},
        {'[1] Магазины', '/gps -> Ближайшие бизнесы -> Магазины'},
        {'[2] АЗС', '/gps -> Ближайшие бизнесы -> АЗС'},
        {'[3] Оружие', '/gps -> Ближайшие бизнесы -> Оружие'},
        {'[4] Бары', '/gps -> Ближайшие бизнесы -> Бары'},
        {'[5] Клубы', '/gps -> Ближайшие бизнесы -> Клубы'},
        {'[6] Еда', '/gps -> Ближайшие бизнесы -> Еда'},
        {'[7] Одежда', '/gps -> Ближайшие бизнесы -> Одежда'},
        {'[8] Спорт', '/gps -> Ближайшие бизнесы -> Спорт'},
        {'[9] Казино', '/gps -> Ближайшие бизнесы -> Казино'},
        {'[10] Транспорт', '/gps -> Ближайшие бизнесы -> Транспорт'}
    },
    avocation = {
        {'[1] Казино', '/gps -> Развлечения -> Казино'},
        {'[2] Центр развлечений ЛС', '/gps -> Развлечения -> Центр развлечений ЛС'},
        {'[3] Центр развлечений СФ', '/gps -> Развлечения -> Центр развлечений СФ'},
        {'[4] Центр развлечений ЛВ', '/gps -> Развлечения -> Центр развлечений ЛВ'}
    },
    organizations = {
        {'[1] LSPD', '/gps -> Базы организаций -> LSPD'},
        {'[2] SFPD', '/gps -> Базы организаций -> SFPD'},
        {'[3] LVPD', '/gps -> Базы организаций -> LVPD'},
        {'[4] Grove Street', '/gps -> Базы организаций -> Grove Street'},
        {'[5] The Ballas', '/gps -> Базы организаций -> The Ballas'},
        {'[6] The Rifa', '/gps -> Базы организаций -> The Rifa'},
        {'[7] Aztecas', '/gps -> Базы организаций -> Aztecas'},
        {'[8] Vagos', '/gps -> Базы организаций -> Vagos'},
        {'[9] Sinaloa Cartel', '/gps -> Базы организаций -> Sinaloa Cartel'},
        {'[10] Juarez Cartel', '/gps -> Базы организаций -> Juarez Cartel'},
        {'[11] Tijuana Cartel', '/gps -> Базы организаций -> Tijuana Cartel'},
        {'[12] FBI', '/gps -> Базы организаций -> FBI'},
        {'[13] LS News', '/gps -> Базы организаций -> LS News'},
        {'[14] SF News', '/gps -> Базы организаций -> SF News'},
        {'[15] Сухопутные войска', '/gps -> Базы организаций -> Сухопутные войска'},
        {'[16] Сухопутные войска СФ', '/gps -> Базы организаций -> Сухопутные войска СФ'},
        {'[17] Байкеры', '/gps -> Базы организаций -> Байкеры'}
    }
}
local rp_termins = {
    'Role Play (RP) » Игра по ролям, отыгрывание роли своего персонажа.',
    'Non Role Play (NRP) » Действия, которые невозможно совершить в реальной жизни.',
    'Meta Gaming (MG) » Информация из реальной жизни в IC (РП) чате.',
    'DeathMatch (DM) » Убийство/нанесение урона игроку, без определенной Role Play причины',
    'DriveBy (DB) » Убийство/нанесение урона игроку с помощью транспортного средства.',
    'Spawn Kill (SK) » Убийство/нанесение урона игроку, при/на его спавне.',
    'Team Kill (TK) » Убийство своих союзников из фракции.',
    'Power Gaming (PG) » Изображение из себя героя. Пример: Драка одного человка против пяти.',
    'Revenge Kill (RK) » Убийство игрока за то, что он убил тебя.',
    'Repeat Kill (RpK) » Убийство одного и того же игрока.',
    'Fun Gaming (FG) » Игра по фану, не соблюдая правила сервера и Role Play атмосферу.',
    'Сharacter Kill (CK) » RP убийство с целью полной ликвидации Role Play персонажа.',
    'In Character (IC) » Информация из виртуальной жизни, всё что касаемо виртуального мира.',
    'Out Of Character (OOC) » Информация из реальной жизни, всё что касаемо реального мира.',
    'Bunny Hop (BH) » NonRP бег с прыжками с целью повысить скорость передвижения.',
    'Fast Reload (FR) » Сброс анимации выстрела из оружия с помощью клавиши "C"',
    'Fast Moving (FM) » Быстрое передвижение с помощью бага.',
    'Screenshot Situation (SS) » РП ситуация, отыгранная со скриншотами.'
}
local russian_characters = {
    [168] = 'Ё', [184] = 'ё', [192] = 'А', [193] = 'Б', [194] = 'В', [195] = 'Г', [196] = 'Д', [197] = 'Е', [198] = 'Ж', [199] = 'З', [200] = 'И', [201] = 'Й', [202] = 'К', [203] = 'Л', [204] = 'М', [205] = 'Н', [206] = 'О', [207] = 'П', [208] = 'Р', [209] = 'С', [210] = 'Т', [211] = 'У', [212] = 'Ф', [213] = 'Х', [214] = 'Ц', [215] = 'Ч', [216] = 'Ш', [217] = 'Щ', [218] = 'Ъ', [219] = 'Ы', [220] = 'Ь', [221] = 'Э', [222] = 'Ю', [223] = 'Я', [224] = 'а', [225] = 'б', [226] = 'в', [227] = 'г', [228] = 'д', [229] = 'е', [230] = 'ж', [231] = 'з', [232] = 'и', [233] = 'й', [234] = 'к', [235] = 'л', [236] = 'м', [237] = 'н', [238] = 'о', [239] = 'п', [240] = 'р', [241] = 'с', [242] = 'т', [243] = 'у', [244] = 'ф', [245] = 'х', [246] = 'ц', [247] = 'ч', [248] = 'ш', [249] = 'щ', [250] = 'ъ', [251] = 'ы', [252] = 'ь', [253] = 'э', [254] = 'ю', [255] = 'я',
}
local eggs = {
    'Стоимость яиц:',
    'Зеленое яйцо - 150.000$',
    'Синее яйцо - 750.000$',
    'Фиолетовое яйцо - 15.000.000$',
    'Красное яйцо - 4к доната',
    'Золотое яйцо - обменяв фиолетовые на золотое.',
    '',
    'Обмен яиц:',
    '20 белых на 1 зеленое',
    '20 зеленых на 1 синее',
    '30 синих на 1 фиолетовое',
    '',
    'Прикормка для яиц:',
    'Маленький пакет прикормки (500ед) - 20.000$',
    'Средний пакет (1000ед) - 38.000$',
    'Большой мешок (2000ед) - 70.000$',
    'Огромный мешок (5000ед) - 150.000$',
    '',
    'Продать яйца:',
    'Зеленое - 5.000$',
    'Синее - 25.000$',
    'Фиолетовое - 100.000$',
    'Золотое - 700.000$',
    'Красное - 1.000.000$',
    '',
    'Цена инкубаторов:',
    'Простой - 1.000.000$',
    'Средний - 1.500.000$',
    'Большой - 2.500.000$',
    'Огромный - 3.500.000$'
}
local info_of_update = {
    "Старая кирка - 15 металла, 13 дерева.",
    '',
    "Что бы собрать какой то компонент для крафта, вам понадобится", "50 предметов с работы пляжа.", "(для каждого компонента свои определенные ресурсы).",
    "Так же компоненты можно купить у торговца, ", "Который находится в дальней части города в горе.", "Цены на все компоненты - 150.000$.",
    '',
    "Что бы найти место для крафта надо ввести.", "/gps -> основное -> Город в горе.",
    "Что бы найти место для покупки инкубатора, яиц и прикормки.", "/gps -> основное -> Хижина охотника.",
    "Что бы крафтить аксессуары, у вас должны быть рецепты крафтов,", "Для этого разбросаны сундуки с ними по всему серверу ", "(в приоритете они спавнятся под деревьями и кустами).", "Что бы его открыть, понадобится отмычка,", "Которую можно приобрести у байкеров.",
    "Что бы устроиться на работу «Дорожные Службы»,", "Вам надо приехать у работодателю", "/gps -> работы -> Дорожная служба.",
    '',
    "Есть 4 типа повреждений на дороге.",
    "Обычная небольшая яма.",
    "Яма с сильным повреждением дорожного полотна.",
    "Небольшие повреждения с кочкой.",
    "Сильное повреждение дорожного полотна с кочкой.",
    '',
    'Изначально вы можете принимать заявки только', 'С самой низкой сложностью для вас, в /kpk они обозначены Зеленым цветом.', 'Прокачивая навык дорожного служащего вы сможете', 'Постепенно брать более сложные заявки.',
    '',
    'Уровни сложности: (х2 не действует).',
    'Зеленая - 4.000$',
    'Синяя - 4.500$',
    'Оранжевая - Артем не узнал ему спасибо',
    'Красная - Артем не узнал ему спасибо',
    '',
    'Выполняя заказы уровнем ниже - вы НЕ получаете опыт дорожника.',
    '',
    'Стоимость аренды транспорта - 500$.',
    '',
    'Что бы открыть меню рабочего, вам надо ввести /kpk',
    'Выбрав точку, вы до нее доезжаете,', 'Ставите рядом транспорт (не слишком близко, а то не даст взаимодействовать),', 'Снова открываете KPK и выполняете каждый пункт поочереди.',
    'Что бы взять предмет с транспорта,', 'Подойдите к задней части авто и введите команду', '/use или нажмите кнопку взаимодействовать, или же команда /rptake',
    '',
    'Что бы выйти из меню, нажмите в панели на стрелочку вниз.',
    'Что бы уволиться с работы, введите /rpleave',
    '',
    'За одну подчинению дорогу вы получите 2.000$',
    '',
    'Так же добавили 2 скина в donate:',
    'Женский скин 12641 - 1.200 мс',
    'Мужской скин (какой то анонимус) - 1.800мс',
    '',
    'Так же добавили возможность купить', 'ПК доступ - 400 MC',
    'Ну и конечно же ', 'Красное яйцо - 4.000 MC',
    '',
    'Что бы появилась кнопка голосового чата',
    '/hudeditor -> голосовой чат -> положение.'
}
local questionFrame = imgui.OnFrame(
    function() return renderQuestion[0] end,
    function(player)
        player.HideCursor = true
        local resX, resY = getScreenResolution()
        local sizeX, sizeY = 490, 275
        imgui.SetNextWindowPos(imgui.ImVec2(resX / 2, resY / 2), imgui.Cond.FirstUseEver, imgui.ImVec2(0.5, 0.5))
        imgui.SetNextWindowSize(imgui.ImVec2(sizeX, sizeY), imgui.Cond.FirstUseEver)
        imgui.Begin(u8'Вопрос', _, imgui.WindowFlags.NoCollapse + imgui.WindowFlags.NoResize)
        imgui.Text(u8"Вопрос от: ".. ask.aName)
        if isKeyJustPressed(vkeys.VK_RETURN) and not sampIsChatInputActive() then
            sampSendDialogResponse(774, 1, _, u8:decode(str(answer)))
            answer = new.char[256]()
            renderQuestion[0] = false
        end
        imgui.SameLine()
        imgui.PushStyleColor(imgui.Col.Text, imgui.ImVec4(0.92549020051956, 0.6745098233223, 0.6745098233223, 1))
        imgui.Text(faicons('desktop'))
        imgui.PopStyleColor() 
        imgui.SameLine()
        imgui.TextDisabled(u8'<<< Копировать данные')
        if imgui.IsItemClicked() then
            if setClipboardText(ask.aName) then
                AddChatMessage('Данные успешно скопированы в буфер обмена', 3)
            else
                AddChatMessage('Произошла техническая ошибка', 2)
            end
        end
        imgui.Hint('copy name',u8'Копировать ник-нейм')
        imgui.Separator()
        if #ask.Text > 69 then
            local text1 = ask.Text:sub(1, 70)
            local text2 = ask.Text:sub(71, #ask.Text)
            imgui.Text(u8(text1..'..\n'..text2))
            imgui.SetWindowSizeVec2(imgui.ImVec2(490, 290))
        else
            imgui.SetWindowSizeVec2(imgui.ImVec2(490, 275))
            imgui.Text(u8(ask.Text))
        end
        
        imgui.Separator()
        imgui.PushItemWidth(457)
        imgui.InputText(u8'##answer', answer, 256)
        imgui.PopItemWidth()
        imgui.SameLine()
        imgui.Text(faicons('retweet'))
        if imgui.IsItemClicked() then
            answer = new.char[256]()
        end
        local bsize = 157
        imgui.Hint('retweet',u8'Сбросить поле ввода')
        if imgui.Button(faicons('MAP_LOCATION_DOT')..u8' Помощь по GPS', imgui.ImVec2(bsize, 25)) then
            imgui.OpenPopup(u8'Помощь по GPS')
        end

        if imgui.BeginPopupModal(u8'Помощь по GPS', _, imgui.WindowFlags.NoCollapse + imgui.WindowFlags.NoScrollbar + imgui.WindowFlags.NoResize + imgui.WindowFlags.NoMove) then
            imgui.SetWindowSizeVec2(imgui.ImVec2(500, 270))
            local size = imgui.GetWindowSize()
            local btns_sizeX = size.x - 13
            imgui.BeginChild('CHILD_FOR_HELP_GPS', imgui.ImVec2(490, 200))
            local function click(name, value, key)
                imgui.Text(u8(value[1]))
                imgui.Hint(name..' hint '..tostring(key), u8'ЛКМ - Вставить в ответ\nПКМ - Скопировать в буфер обмена')
                if imgui.IsItemClicked(0) then
                    if autoanswer[0] then
                        answer = new.char[256](u8(value[2]))
                    else
                        answer = new.char[256](u8'Приветствую, '..u8(value[2]))
                    end
                    imgui.CloseCurrentPopup()
                end
                if imgui.IsItemClicked(1) then
                    lua_thread.create(function()
                        setKeyboardLanguage("00000419")
                        wait(100)
                        local result = setClipboardText(value[2])
                        if result then
                            AddChatMessage('Данные успешно скопированы в буфер обмена', 3)
                        end
                    end)
                    imgui.CloseCurrentPopup()
                end
            end
            if imgui.Button(u8'Поставить метку на карте',imgui.ImVec2(btns_sizeX,25)) then
                sampSendDialogResponse(774, 1, _, '!Приветствую '..ask.aName:gsub('_%w+', '')..', сейчас поставлю вам метку на карте.')
                imgui.CloseCurrentPopup()
                renderQuestion[0] = false
            end
            if imgui.CollapsingHeader(u8'[1] Основные') then
                for k, v in pairs(gps.main) do
                    click('gps.main', v, k)
                end
            end
            if imgui.CollapsingHeader(u8'[2] Работы') then
                for k, v in pairs(gps.jobs) do
                    click('gps.jobs', v, k)
                end
            end
            if imgui.CollapsingHeader(u8'[3] Транспорт') then
                for k, v in pairs(gps.transport) do
                    click('gps.transport', v, k)
                end
            end
            if imgui.CollapsingHeader(u8'[4] Ближайшие бизнесы') then
                for k, v in pairs(gps.nearest_businesses) do
                    click('gps.nearest_businesses', v, k)
                end
            end
            if imgui.CollapsingHeader(u8'[5] Развлечения') then
                for k, v in pairs(gps.avocation) do
                    click('gps.avocation', v, k)
                end
            end
            if imgui.CollapsingHeader(u8'[6] Базы организаций') then
                for k, v in pairs(gps.organizations) do
                    click('gps.organizations', v, k)
                end
            end
            imgui.EndChild()
            imgui.Separator()
            if imgui.Button(u8'Закрыть',imgui.ImVec2(btns_sizeX,25)) then
                imgui.CloseCurrentPopup()
            end
            imgui.EndPopup()
        end

        imgui.SameLine()

        if imgui.Button(faicons('COMMENTS')..u8' Переслать в /hc чат', imgui.ImVec2(bsize, 25)) then
            sampSendDialogResponse(774, 1, _, 'Уважаемый игрок, передал Ваш вопрос в чат хелперов.')
            answer = new.char[256]()
            renderQuestion[0] = false
        end

        imgui.SameLine()

        if imgui.Button(faicons('RECTANGLE_TERMINAL')..u8' Помощь по командам', imgui.ImVec2(bsize, 25)) then
            imgui.OpenPopup(u8'Помощь по командам')
        end

        if imgui.BeginPopupModal(u8'Помощь по командам', _, imgui.WindowFlags.NoCollapse + imgui.WindowFlags.NoScrollbar + imgui.WindowFlags.NoResize + imgui.WindowFlags.NoMove) then
            imgui.SetWindowSizeVec2(imgui.ImVec2(500, 600))
            local size = imgui.GetWindowSize()
            local btns_sizeX = size.x - 13
            imgui.PushItemWidth(425)
            imgui.InputTextWithHint('##SearchBar',u8'Поиск',search_cmds,256)
            imgui.PopItemWidth()
            imgui.SameLine()
            if imgui.Button(u8'Закрыть') then
                imgui.CloseCurrentPopup()
            end
            for k, v in pairs(cmds) do
                if search_cmds == "" then
                    imgui.Text(u8(v))
                    imgui.Hint('cmds hint '..tostring(k), u8'Вставить в ответ')
                    if imgui.IsItemClicked() then
                        if autoanswer[0] then
                            answer = new.char[256](u8(v))
                        else
                            answer = new.char[256](u8'Приветствую, '..u8(v))
                        end
                        imgui.CloseCurrentPopup()
                    end
                else
                    if string.rlower(v):find(string.rlower(u8:decode(str(search_cmds)))) ~= nil then
                        imgui.Text(u8(v))
                        imgui.Hint('cmds hint '..tostring(k), u8'Вставить в ответ')
                        if imgui.IsItemClicked() then
                            if autoanswer[0] then
                                answer = new.char[256](u8(v))
                            else
                                answer = new.char[256](u8'Приветствую, '..u8(v))
                            end
                            imgui.CloseCurrentPopup()
                        end
                    end
                end
            end
            imgui.EndPopup()
        end

        if imgui.Button(faicons('WRENCH')..u8' Тех. раздел', imgui.ImVec2(bsize, 25)) then
            sampSendDialogResponse(774, 1, _, 'Приветствую '..ask.aName:gsub('_%w+', '')..', обратитесь в тех. раздел на форуме игры.')
            answer = new.char[256]()
            renderQuestion[0] = false
        end

        imgui.SameLine()

        if imgui.Button(faicons('TRIANGLE_EXCLAMATION')..u8' ЖБ на форум', imgui.ImVec2(bsize, 25)) then
            sampSendDialogResponse(774, 1, _, 'Приветствую '..ask.aName:gsub('_%w+', '')..', оформите жалобу на форуме игры (/mordor -> Форум).')
            answer = new.char[256]()
            renderQuestion[0] = false
        end

        imgui.SameLine()

        if imgui.Button(faicons('CIRCLE_INFO')..u8' Уточните', imgui.ImVec2(bsize, 25)) then
            sampSendDialogResponse(774, 1, _, 'Приветствую '..ask.aName:gsub('_%w+', '')..', уточните пожалуйста ваш вопрос.')
            answer = new.char[256]()
            renderQuestion[0] = false
        end

        if imgui.Button(faicons('SHARE')..u8' Используйте', imgui.ImVec2(bsize, 25)) then
            answer = new.char[256](u8('Используйте '))
        end
        
        imgui.SameLine()
        if imgui.Button(faicons('USER_LARGE_SLASH')..u8' Оффтоп', imgui.ImVec2(bsize, 25)) then
            sampSendDialogResponse(774, 1, _, 'Приветствую '..ask.aName:gsub('_%w+', '')..', пожалуйста не оффтопьте.//offtop')
            answer = new.char[256]()
            renderQuestion[0] = false
        end

        imgui.SameLine()

        if imgui.Button(faicons('HANDSHAKE_ANGLE')..u8' Помощь по моду', imgui.ImVec2(bsize, 25)) then
            imgui.OpenPopup(u8'Помощь по моду')
        end
        if imgui.BeginPopupModal(u8'Помощь по моду', _, imgui.WindowFlags.NoCollapse + imgui.WindowFlags.NoScrollbar + imgui.WindowFlags.NoResize + imgui.WindowFlags.NoMove) then
            help_info()
            imgui.EndPopup()
        end

        if imgui.Button(faicons('EYE_SLASH')..u8' Не следим за ценами', imgui.ImVec2(bsize, 25)) then
            sampSendDialogResponse(774, 1, _, 'Приветствую '..ask.aName:gsub('_%w+', '')..', увы хелперы не следят за ценами.')
            answer = new.char[256]()
            renderQuestion[0] = false
        end

        imgui.SameLine()

        if imgui.Button(faicons('lightbulb_slash')..u8' Нет информации', imgui.ImVec2(bsize, 25)) then
            sampSendDialogResponse(774, 1, _, 'Приветствую '..ask.aName:gsub('_%w+', '')..', увы мы не владеем данной информацией.')
            answer = new.char[256]()
            renderQuestion[0] = false
        end

        imgui.SameLine()

        if imgui.Button(faicons('HANDSHAKE_SLASH')..u8' Не можем', imgui.ImVec2(bsize, 25)) then
            sampSendDialogResponse(774, 1, _, 'Приветствую '..ask.aName:gsub('_%w+', '')..', увы мы не можем.')
            answer = new.char[256]()
            renderQuestion[0] = false
        end
        imgui.Separator()
        imgui.PushStyleColor(imgui.Col.ButtonHovered, imgui.ImVec4(0.07, 1.00, 1.00, 0.40))
        imgui.PushStyleColor(imgui.Col.Button, imgui.ImVec4(0.33, 0.33, 0.33, 0.6))
        if imgui.Button(u8'Отправить',imgui.ImVec2(bsize, 25)) then 
            if autoanswer[0] then
                sampSendDialogResponse(774, 1, _, 'Приветствую '..ask.aName:gsub('_%w+', '')..', '..u8:decode(str(answer)):sub(1, 1):rlower()..u8:decode(str(answer)):sub(2, #u8:decode(str(answer))))
            else
                sampSendDialogResponse(774, 1, _, u8:decode(str(answer)):sub(1, 1):rupper()..u8:decode(str(answer)):sub(2, #u8:decode(str(answer))))
            end
            answer = new.char[256]()
            renderQuestion[0] = false
        end
        imgui.SameLine()
        if imgui.Button(u8'Нормы наказаний',imgui.ImVec2(bsize, 25)) then
            imgui.OpenPopup(u8'Нормы наказаний')  
        end
        imgui.SameLine()
        if imgui.Button(u8'Закрыть',imgui.ImVec2(bsize, 25)) then
            imgui.OpenPopup(u8'Подтверждение закрытия')  
        end
        imgui.PopStyleColor()
        imgui.PopStyleColor()
        if imgui.BeginPopupModal(u8'Нормы наказаний', _, imgui.WindowFlags.NoCollapse + imgui.WindowFlags.NoScrollbar + imgui.WindowFlags.NoResize + imgui.WindowFlags.NoMove) then
            local size = imgui.GetWindowSize()
            local btns_sizeX = size.x - 13
            imgui.Text(u8(norms))
            if imgui.Button(u8'Закрыть',imgui.ImVec2(btns_sizeX,25)) then
                imgui.CloseCurrentPopup()
            end
            imgui.EndPopup()
        end
        if imgui.BeginPopupModal(u8'Подтверждение закрытия', _, imgui.WindowFlags.NoCollapse + imgui.WindowFlags.NoScrollbar + imgui.WindowFlags.NoResize + imgui.WindowFlags.NoMove) then
            local size = imgui.GetWindowSize()
            local btns_sizeX = size.x / 2 - 13
            imgui.Text(u8'Вы действительно хотите закрыть вопрос?')
            imgui.Text(u8'Руководство может вам надавать по попке!')
            if imgui.Button(faicons('check')..u8' Да',imgui.ImVec2(btns_sizeX,25)) then
                lua_thread.create(function()
                    sampSendDialogResponse(774, 0, _, _)
                    sampSendDialogResponse(773, 0, _, _)
                    sampSendDialogResponse(772, 0, _, _)
                    repeat
                        wait(10)
                    until sampIsDialogActive()
                    sampCloseCurrentDialogWithButton(0)
                end)
                
                answer = new.char[256]()
                renderQuestion[0] = false
                imgui.CloseCurrentPopup()
            end
            imgui.SameLine()
            if imgui.Button(faicons('xmark')..u8' Нет', imgui.ImVec2(btns_sizeX, 25)) then
                imgui.CloseCurrentPopup()
            end
            imgui.EndPopup()
        end
        imgui.End()
    end
)
function string.rupper(s)
    s = s:upper()
    local strlen = s:len()
    if strlen == 0 then return s end
    s = s:upper()
    local output = ''
    for i = 1, strlen do
        local ch = s:byte(i)
        if ch >= 224 and ch <= 255 then -- lower russian characters
            output = output .. russian_characters[ch - 32]
        elseif ch == 184 then -- ё
            output = output .. russian_characters[168]
        else
            output = output .. string.char(ch)
        end
    end
    return output
end
function string.rlower(s)
    if s ~= nil then
        s = s:lower()
        local strlen = s:len()
        if strlen == 0 then return s end
        s = s:lower()
        local output = ''
        for i = 1, strlen do
            local ch = s:byte(i)
            if ch >= 192 and ch <= 223 then -- upper russian characters
                output = output .. russian_characters[ch + 32]
            elseif ch == 168 then -- пїЅ
                output = output .. russian_characters[184]
            else
                output = output .. string.char(ch)
            end
        end
        return output
    end
end
function help_info()
    imgui.SetWindowSizeVec2(imgui.ImVec2(500, 540))
    local size = imgui.GetWindowSize()
    local btns_sizeX = size.x - 13
    imgui.BeginChild('CHILD_FOR_HELP_MODE', imgui.ImVec2(490, 470))
    local function click(name, value, key, var)
        if var == "" then
            imgui.Text(u8(value))
            imgui.Hint(name..' hint '..tostring(key), u8'ЛКМ - Вставить в ответ\nПКМ - Скопировать в буфер обмена')
            if imgui.IsItemClicked(0) then
                if autoanswer[0] then
                    answer = new.char[256](u8(value))
                else
                    answer = new.char[256](u8'Приветствую, '..u8(value))
                end
                imgui.CloseCurrentPopup()
            end
            if imgui.IsItemClicked(1) then
                lua_thread.create(function()
                    setKeyboardLanguage("00000419")
                    wait(100)
                    local result = setClipboardText(value)
                    if result then
                        AddChatMessage('Данные успешно скопированы в буфер обмена', 3)
                    end
                end)
                imgui.CloseCurrentPopup()
            end
        else
            if string.rlower(value):find(string.rlower(u8:decode(str(var)))) ~= nil then
                imgui.Text(u8(value))
                imgui.Hint(name..' hint '..tostring(key), u8'ЛКМ - Вставить в ответ\nПКМ - Скопировать в буфер обмена')
                if imgui.IsItemClicked(0) then
                    if autoanswer[0] then
                        answer = new.char[256](u8(value))
                    else
                        answer = new.char[256](u8'Приветствую, '..u8(value))
                    end
                    imgui.CloseCurrentPopup()
                end
                if imgui.IsItemClicked(1) then
                    lua_thread.create(function()
                        setKeyboardLanguage("00000419")
                        wait(100)
                        local result = setClipboardText(value)
                        if result then
                            AddChatMessage('Данные успешно скопированы в буфер обмена', 3)
                        end
                    end)
                    imgui.CloseCurrentPopup()
                end
            end
        end
    end
    if imgui.CollapsingHeader(u8'Команды') then
        imgui.PushItemWidth(480)
        imgui.InputTextWithHint('##SearchBar',u8'Поиск',search_cmds,256)
        imgui.PopItemWidth()
        for k, v in pairs(cmds) do
            click('search_cmds', v, k, search_cmds)
        end
    end
    if imgui.CollapsingHeader(u8'Команды организаций') then
        imgui.PushItemWidth(480)
        imgui.InputTextWithHint('##SearchBarOrg',u8'Поиск',search_cmds_org,256)
        imgui.PopItemWidth()
        for k, v in pairs(cmds_org) do
            click('search_cmds_org', v, k, search_cmds_org)
        end
    end
    if imgui.CollapsingHeader(u8'Команды работ') then
        imgui.PushItemWidth(480)
        imgui.InputTextWithHint('##SearchBarJob',u8'Поиск',search_cmds_job,256)
        imgui.PopItemWidth()
        for k, v in pairs(cmds_job) do
            click('search_cmds_job', v, k, search_cmds_job)
        end
    end
    if imgui.CollapsingHeader(u8'Информация о семьях') then
        imgui.PushItemWidth(480)
        imgui.InputTextWithHint('##SearchBarFam',u8'Поиск',search_fam,256)
        imgui.PopItemWidth()
        for k, v in pairs(fams) do
            click('search_fam', v, k, search_fam)
        end
    end
    if imgui.CollapsingHeader(u8'Информация о VIP') then
        imgui.PushItemWidth(480)
        imgui.InputTextWithHint('##SearchBarVip',u8'Поиск',search_vips,256)
        imgui.PopItemWidth()
        for k, v in pairs(vips) do
            click('search_vips', v, k, search_vips)
        end
    end
    if imgui.CollapsingHeader(u8'Информация о меню Donate') then
        imgui.PushItemWidth(480)
        imgui.InputTextWithHint('##SearchBarDonate',u8'Поиск',search_donate,256)
        imgui.PopItemWidth()
        for k, v in pairs(donate) do
            click('search_donate', v, k, search_donate)
        end
    end
    if imgui.CollapsingHeader(u8'Государственные цены транспорта') then
        imgui.PushItemWidth(480)
        imgui.InputTextWithHint('##SearchBarCarsPrice',u8'Поиск',search_cars_price,256)
        imgui.PopItemWidth()
        for k, v in pairs(cars_price) do
            click('search_cars_price', v, k, search_cars_price)
        end
    end
    if imgui.CollapsingHeader(u8'Государственные цены аксессуаров') then
        imgui.PushItemWidth(480)
        imgui.InputTextWithHint('##SearchBarAcsPrice',u8'Поиск',search_acs_price,256)
        imgui.PopItemWidth()
        for k, v in pairs(acs_price) do
            click('search_acs_price', v, k, search_acs_price)
        end
    end
    if imgui.CollapsingHeader(u8'Время провождения мероприятий') then
        for k, v in pairs(table_events) do
            imgui.Text(u8(v))
            imgui.Hint('table_events hint '..tostring(k), u8'Вставить в ответ')
            if imgui.IsItemClicked() then
                answer = new.char[256](u8'Приветствую, '..u8(v))
                imgui.CloseCurrentPopup()
            end
        end
    end
    if imgui.CollapsingHeader(u8'Информация о домах') then
        for k, v in pairs(houses_price) do
            imgui.Text(u8(v))
            imgui.Hint('houses_price hint '..tostring(k), u8'Вставить в ответ')
            if imgui.IsItemClicked() then
                answer = new.char[256](u8'Приветствую, '..u8(v))
                imgui.CloseCurrentPopup()
            end
        end
    end
    if imgui.CollapsingHeader(u8'Информация о скупщике') then
        for k, v in pairs(fence) do
            imgui.Text(u8(v))
            imgui.Hint('fence hint '..tostring(k), u8'Вставить в ответ')
            if imgui.IsItemClicked() then
                answer = new.char[256](u8'Приветствую, '..u8(v))
                imgui.CloseCurrentPopup()
            end
        end
    end
    if imgui.CollapsingHeader(u8'Информация о улучшениях') then
        for k, v in pairs(enchancements) do
            imgui.Text(u8(v))
            imgui.Hint('enchancements hint '..tostring(k), u8'Вставить в ответ')
            if imgui.IsItemClicked() then
                answer = new.char[256](u8'Приветствую, '..u8(v))
                imgui.CloseCurrentPopup()
            end
        end
    end
    if imgui.CollapsingHeader(u8'Зарплаты на работах') then
        imgui.InputTextWithHint('##SearchBarSalary',u8'Поиск',search_salary,256)
        imgui.PopItemWidth()
        for k, v in pairs(salary) do
            click('search_salary', v, k, search_salary)
        end
    end
    if imgui.CollapsingHeader(u8'Зарплаты в организациях') then
        imgui.InputTextWithHint('##SearchBarSalaryOrg',u8'Поиск',search_salary_org,256)
        imgui.PopItemWidth()
        for k, v in pairs(salary_org) do
            click('search_salary_org', v, k, search_salary_org)
        end
    end
    if imgui.CollapsingHeader(u8'RolePlay термины') then
        for k, v in pairs(rp_termins) do
            imgui.Text(u8(v))
            imgui.Hint('RP TERMINS hint '..k, u8'ЛКМ - Отправить\nПКМ - Скопировать в буфер обмена')
            if imgui.IsItemClicked(0) then
                sampSendDialogResponse(774, 1, _, v)
                answer = new.char[256]()
                renderQuestion[0] = false
                imgui.CloseCurrentPopup()
            end
            if imgui.IsItemClicked(1) then
                lua_thread.create(function()
                    setKeyboardLanguage("00000419")
                    wait(100)
                    local result = setClipboardText(v)
                    if result then
                        AddChatMessage('Данные успешно скопированы в буфер обмена', 3)
                    end
                end)
                imgui.CloseCurrentPopup()
            end
        end
    end
    if imgui.CollapsingHeader(u8'Информация о яйцах') then
        imgui.PushItemWidth(480)
        imgui.InputTextWithHint('##searchbar_eggs',u8'Поиск',search_eggs,256)
        imgui.PopItemWidth()
        for k, v in pairs(eggs) do
            click('search_eggs', v, k, search_eggs)
        end
    end
    if imgui.CollapsingHeader(u8'Информация о обновлении') then
        imgui.PushItemWidth(480)
        imgui.InputTextWithHint('##searchbar_infoofupdate',u8'Поиск',search_info_of_update,256)
        imgui.PopItemWidth()
        for k, v in pairs(info_of_update) do
            click('search_info_of_update', v, k, search_info_of_update)
        end
    end
    imgui.EndChild()
    imgui.Separator()
    if imgui.Button(u8'Закрыть',imgui.ImVec2(btns_sizeX,25)) then
        imgui.CloseCurrentPopup()
    end
end
function samp.onServerMessage(color, text)
    if text:find('%['..select(2, sampGetPlayerIdByCharHandle(PLAYER_PED))..'%] для .+%[%d+%]%: Уважаемый игрок%, передал Ваш вопрос в чат хелперов') then
        lua_thread.create(function()
            if #ask.Text > 51 then
                local text1 = ask.Text:sub(1, 50)
                local text2 = ask.Text:sub(51, 100)
                sampSendChat('/hc «'..ask.aName..'» '..text1..'..')
                wait(3000)
                sampSendChat('/hc «'..ask.aName..'» ..'..text2)
            else
                sampSendChat('/hc «'..ask.aName..'» '..ask.Text)
            end
        end)
        return {text, color}
    end
    if mainIni.settings.autoopenanswer then
        if text:find('Всего вопросов%: (%d+)') then
            all_q = text:match('Всего вопросов%: (%d+)')
            all_q = tonumber(all_q)
            blockhask = false
        end
        
        if text:find('{ffa8a8}Вопрос отсутствует') then
            AddChatMessage('Вопрос под номером '..all_q + 1 ..' отсутствует.', 2)
            sampSendDialogResponse(772, 0, _, _)
            lua_thread.create(function()
                repeat
                    wait(10)
                until sampIsDialogActive()
                sampCloseCurrentDialogWithButton(0)
            end)
            return false
        end
        if text:find('{ffa8a8}Данный вопрос') then
            AddChatMessage('Данный вопрос уже кто-то просматривает.', 2)
            sampSendDialogResponse(772, 0, _, _)
            lua_thread.create(function()
                repeat
                    wait(10)
                until sampIsDialogActive()
                sampCloseCurrentDialogWithButton(0)
            end)
            return false
        end
        if text:find('{ffa8a8}Неверный пункт меню') then
            if all_q < 0 then
                all_q = 0
            end
            sampSendDialogResponse(772, 0, _, _)
            lua_thread.create(function()
                repeat
                    wait(10)
                until sampIsDialogActive()
                sampCloseCurrentDialogWithButton(0)
            end)
            AddChatMessage('Сейчас нет вопросов или произошла ошибка.', 2)
            return false
        end
    end
    if text:find('Ваш аккаунт успешно загрузился') then
        AddChatMessage('Загружен', 1)
        AddChatMessage('Используйте /ht для вызова основного меню', 1)
        sampSendChat('/hduty')
    end
end
function sampGetPlayerIdByNickname(nick)
    local result, id = sampGetPlayerIdByCharHandle(PLAYER_PED)
    if nick == sampGetPlayerNickname(id) then return id end
    for i = 0, sampGetMaxPlayerId(false) do
        if sampIsPlayerConnected(i) and sampGetPlayerNickname(i) == nick then return i end
    end
end
function samp.onShowDialog(id, style, title, button1, button2, text)
    if string.find(text:gsub('%{......%}',''),'Имя: (.+)\nВопрос: (.+)')then
        ask.aName, ask.Text= string.match(text:gsub('%{......%}',''),'Имя: (.+)\nВопрос: (.+)\nВведите в поле ниже ваш ответ.')
    end
    if id == 774 then
        renderQuestion[0] = true
        return false
    end
    if id == 773 then
        sampSendDialogResponse(773, 1, 0, _)
        return false
    end
end


function imgui.CenterText(text)
    imgui.SetCursorPosX(imgui.GetWindowSize().x / 2 - imgui.CalcTextSize(text).x / 2)
    imgui.Text(text)
end

function imgui.CloseButton(str_id, value, size, rounding)
	size = size or 40
	rounding = rounding or 5
	local DL = imgui.GetWindowDrawList()
	local p = imgui.GetCursorScreenPos()
	
	local result = imgui.InvisibleButton(str_id, imgui.ImVec2(size, size))
	if result then
		value[0] = false
	end
	local hovered = imgui.IsItemHovered()

	local col = ToU32(imgui.ImVec4(1.00, 1.00, 1.00, 0.70))
	local col_bg = hovered and 0x0F0F0FFF or 0x0FFFFFFF
	local offs = (size / 4)

	DL:AddRectFilled(p, imgui.ImVec2(p.x + size, p.y + size), col_bg, rounding, 15)
	DL:AddLine(
		imgui.ImVec2(p.x + offs, p.y + offs), 
		imgui.ImVec2(p.x + size - offs, p.y + size - offs), 
		col,
		size / 10
	)
	DL:AddLine(
		imgui.ImVec2(p.x + size - offs, p.y + offs), 
		imgui.ImVec2(p.x + offs, p.y + size - offs),
		col,
		size / 10
	)
	return result
end



function limit(v, min, max) -- Ограничение динамического значения
	min = min or 0.0
	max = max or 1.0
	return v < min and min or (v > max and max or v)
end

function bringVec4To(from, to, start_time, duration)
    local timer = os.clock() - start_time
    if timer >= 0.00 and timer <= duration then
        local count = timer / (duration / 100)
        return imgui.ImVec4(
            from.x + (count * (to.x - from.x) / 100),
            from.y + (count * (to.y - from.y) / 100),
            from.z + (count * (to.z - from.z) / 100),
            from.w + (count * (to.w - from.w) / 100)
        ), true
    end
    return (timer > duration) and to or from, false
end

function bringVec2To(from, to, start_time, duration)
    local timer = os.clock() - start_time
    if timer >= 0.00 and timer <= duration then
        local count = timer / (duration / 100)
        return imgui.ImVec2(
            from.x + (count * (to.x - from.x) / 100),
            from.y + (count * (to.y - from.y) / 100)
        ), true
    end
    return (timer > duration) and to or from, false
end

function bringFloatTo(from, to, start_time, duration)
    local timer = os.clock() - start_time
    if timer >= 0.00 and timer <= duration then
        local count = timer / (duration / 100)
        return from + (count * (to - from) / 100), true
    end
    return (timer > duration) and to or from, false
end

function isPlaceHovered(a, b) -- Проверка находится ли курсор в указанной области
	local m = imgui.GetMousePos()
	if m.x >= a.x and m.y >= a.y then
		if m.x <= b.x and m.y <= b.y then
			return true
		end
	end
	return false
end

function getContrastColor(bg_col, col_1, col_2) -- Получение цвета текста в зависимости от фона
	col_1 = col_1 or imgui.ImVec4(0.00, 0.00, 0.00, 1.00)
	col_2 = col_2 or imgui.ImVec4(1.00, 1.00, 1.00, 1.00)
    local luminance = 1 - (0.299 * bg_col.x + 0.587 * bg_col.y + 0.114 * bg_col.z)
    return luminance < 0.5 and col_1 or col_2
end

function set_alpha(color, alpha) -- Получение цвета с определённой прозрачностью
	alpha = alpha and limit(alpha, 0.0, 1.0) or 1.0
	return imgui.ImVec4(color.x, color.y, color.z, alpha)
end

function getKeysList(bool)
    local bool = bool or false
    local tKeysList = {}
    if bool then
       for k, v in ipairs(tKeys) do
          tKeysList[k] = vkeys.id_to_name(v)
       end
    else
       tKeysList = tKeys
    end
    return tKeysList
 end
 
 function getKeysName(keys)
     if type(keys) ~= "table" then
        return false
     else
        local tKeysName = {}
        for k, v in ipairs(keys) do
           tKeysName[k] = vkeys.id_to_name(v)
        end
        return tKeysName
     end
  end
 
 local function getKeyNumber(id)
    for k, v in ipairs(tKeys) do
       if v == id then
          return k
       end
    end
    return -1
 end


 local function reloadKeysList()
    local tNewKeys = {}
    for k, v in pairs(tKeys) do
       tNewKeys[#tNewKeys + 1] = v
    end
    tKeys = tNewKeys
    return true
 end

function isKeyModified(id)
if type(id) ~= "number" then
   return false
end
return (tModKeys[id] or false) or (tBlockKeys[id] or false)
end

addEventHandler("onWindowMessage", function (msg, wparam, lparam)
    if tHotKeyData.edit ~= nil and msg == wm.WM_CHAR then
        if tBlockChar[wparam] then
            consumeWindowMessage(true, true)
        end
    end
    if msg == wm.WM_KEYDOWN or msg == wm.WM_SYSKEYDOWN then
        if tHotKeyData.edit ~= nil and wparam == vkeys.VK_ESCAPE then
            tKeys = {}
            tHotKeyData.edit = nil
            consumeWindowMessage(true, true)
        end
        if tHotKeyData.edit ~= nil and wparam == vkeys.VK_BACK then
            tHotKeyData.save = {tHotKeyData.edit, {}}
            tHotKeyData.edit = nil
            consumeWindowMessage(true, true)
        end
        local num = getKeyNumber(wparam)
        if num == -1 then
            tKeys[#tKeys + 1] = wparam
            if tHotKeyData.edit ~= nil then
                if not isKeyModified(wparam) then
                    tHotKeyData.save = {tHotKeyData.edit, tKeys}
                    tHotKeyData.edit = nil
                    tKeys = {}
                    consumeWindowMessage(true, true)
                end
            end
        end
        reloadKeysList()
        if tHotKeyData.edit ~= nil then
            consumeWindowMessage(true, true)
        end
    elseif msg == wm.WM_KEYUP or msg == wm.WM_SYSKEYUP then
        local num = getKeyNumber(wparam)
        if num > -1 then
            tKeys[num] = nil
        end
        reloadKeysList()
        if tHotKeyData.edit ~= nil then
            consumeWindowMessage(true, true)
        end
    end
end)



function imgui.HotKey(name, keys, width, height, disabled)
    local width = width or 90
    local height = height or 0
    local disabled = disabled or false
    local name = tostring(name)
    local keys, bool = keys or {}, false
    local thisEdit = false
    
    local sKeys = table.concat(getKeysName(keys.v), " + ")
    
    if #tHotKeyData.save > 0 and tostring(tHotKeyData.save[1]) == name then
        keys.v = tHotKeyData.save[2]
        sKeys = table.concat(getKeysName(keys.v), " + ")
        tHotKeyData.save = {}
        bool = true
    elseif tHotKeyData.edit ~= nil and tostring(tHotKeyData.edit) == name then
        thisEdit = true
        if #tKeys == 0 then
            if os.clock() - tHotKeyData.lastTick > 0.5 then
            tHotKeyData.lastTick = os.clock()
            tHotKeyData.tickState = not tHotKeyData.tickState
         end
         sKeys = tHotKeyData.tickState and _SETTINGS.HotKey.noKeysMessage or " "
        else
            sKeys = table.concat(getKeysName(tKeys), " + ")
        end
    end
    local colText = imgui.GetStyle().Colors[imgui.Col.Text]
    imgui.PushStyleColor(imgui.Col.Button, imgui.GetStyle().Colors[imgui.Col.FrameBg])
    imgui.PushStyleColor(imgui.Col.ButtonHovered, imgui.GetStyle().Colors[imgui.Col.FrameBgHovered])
    imgui.PushStyleColor(imgui.Col.ButtonActive, imgui.GetStyle().Colors[imgui.Col.FrameBgActive])
    imgui.PushStyleColor(imgui.Col.Text, (disabled and not thisEdit) and imgui.ImVec4(colText.x, colText.y, colText.z, 0.5) or colText)
    imgui.PushStyleVarVec2(imgui.StyleVar.ButtonTextAlign, imgui.ImVec2(0.04, 0.4))
    if imgui.Button((tostring(sKeys):len() == 0 and _SETTINGS.HotKey.noKeysMessage or sKeys) .. name, imgui.ImVec2(width, height)) then
        tHotKeyData.edit = name
    end
    imgui.PopStyleVar()
    imgui.PopStyleColor(4)
    return bool
end

function imgui.Hint(str_id, hint_text, color, no_center)
	color = color or imgui.GetStyle().Colors[imgui.Col.PopupBg]
	local p_orig = imgui.GetCursorPos()
	local hovered = imgui.IsItemHovered()
	imgui.SameLine(nil, 0)

	local duration = 0.2
	local show = true

	if not AI_HINTS[str_id] then
		AI_HINTS[str_id] = {
			status = false,
			timer = 0
		}
	end
	local pool = AI_HINTS[str_id]

	if hovered then
		for k, v in pairs(AI_HINTS) do
			if k ~= str_id and os.clock() - v.timer <= duration  then
				show = false
			end
		end
	end

	if show and pool.status ~= hovered then
		pool.status = hovered
		pool.timer = os.clock()
	end

	local rend_window = function(alpha)
		local size = imgui.GetItemRectSize()
		local scrPos = imgui.GetCursorScreenPos()
		local DL = imgui.GetWindowDrawList()
		local center = imgui.ImVec2( scrPos.x - (size.x / 2), scrPos.y + (size.y / 2) - (alpha * 4) + 10 )
		local a = imgui.ImVec2( center.x - 7, center.y - size.y - 3 )
		local b = imgui.ImVec2( center.x + 7, center.y - size.y - 3)
		local c = imgui.ImVec2( center.x, center.y - size.y + 3 )
		local col = ToU32(imgui.ImVec4(color.x, color.y, color.z, alpha))

		DL:AddTriangleFilled(a, b, c, col)
		imgui.SetNextWindowPos(imgui.ImVec2(center.x, center.y - size.y - 3), imgui.Cond.Always, imgui.ImVec2(0.5, 1.0))
		imgui.PushStyleColor(imgui.Col.PopupBg, color)
		imgui.PushStyleColor(imgui.Col.Border, color)
		imgui.PushStyleColor(imgui.Col.Text, getContrastColor(color))
		imgui.PushStyleVarVec2(imgui.StyleVar.WindowPadding, imgui.ImVec2(8, 8))
		imgui.PushStyleVarFloat(imgui.StyleVar.WindowRounding, 6)
		imgui.PushStyleVarFloat(imgui.StyleVar.Alpha, alpha)

		local max_width = function(text)
			local result = 0
			for line in text:gmatch('[^\r\n]+') do
				local len = imgui.CalcTextSize(line).x
				if len > result then
					result = len
				end
			end
			return result
		end

		local hint_width = max_width(hint_text) + (imgui.GetStyle().WindowPadding.x * 2)
		imgui.SetNextWindowSize(imgui.ImVec2(hint_width, -1), imgui.Cond.Always)
		imgui.Begin('##' .. str_id, _, imgui.WindowFlags.Tooltip + imgui.WindowFlags.NoResize + imgui.WindowFlags.NoScrollbar + imgui.WindowFlags.NoTitleBar)
			for line in hint_text:gmatch('[^\r\n]+') do
				if no_center then
					imgui.Text(line)
				else
					imgui.SetCursorPosX((hint_width - imgui.CalcTextSize(line).x) / 2)
					imgui.Text(line)
				end
			end
		imgui.End()

		imgui.PopStyleVar(3)
		imgui.PopStyleColor(3)
	end

	if show then
		local between = os.clock() - pool.timer
		if between <= duration then
			local alpha = hovered and limit(between / duration, 0.0, 1.0) or limit(1.00 - between / duration, 0.0, 1.0)
			rend_window(alpha)
		elseif hovered then
			rend_window(1.00)
		end
	end

	imgui.SetCursorPos(p_orig)
end

function imgui.ToggleButton(name, bool, size)
    local function bringFloatTo(from, to, start_time, duration)
        local timer = os.clock() - start_time
        if timer >= 0.00 and timer <= duration then
            local count = timer / (duration / 100)
            return from + (count * (to - from) / 100), true
        end
        return (timer > duration) and to or from, false
    end

    local rounding = imgui.GetStyle().FrameRounding
    local size = size or imgui.ImVec2(60, 25)
    local dl = imgui.GetWindowDrawList()
    local p = imgui.GetCursorScreenPos()

    if UI_CUSTOM_TOGGLEBUTTON == nil then UI_CUSTOM_TOGGLEBUTTON = {} end

    if UI_CUSTOM_TOGGLEBUTTON[name] == nil then
        UI_CUSTOM_TOGGLEBUTTON[name] = {
            argument = bool[0],
            bool = false,
            alignment = {bool[0] and size.x / 1.5 - 5 or 0, true},
            clock = 0
        }
    end

    local go_anim = true
    if UI_CUSTOM_TOGGLEBUTTON[name].argument ~= bool[0] then
        UI_CUSTOM_TOGGLEBUTTON[name].argument = bool[0]
        if go_anim then
            UI_CUSTOM_TOGGLEBUTTON[name].bool = true
            UI_CUSTOM_TOGGLEBUTTON[name].clock = os.clock()
        else
            UI_CUSTOM_TOGGLEBUTTON[name].alignment = {bool[0] and size.x / 1.5 - 5 or 0, true}
        end
    end

    local color = {
        constant_color = imgui.GetColorU32Vec4(imgui.GetStyle().Colors[imgui.Col.CheckMark]),
        temp_color = imgui.GetColorU32Vec4(imgui.GetStyle().Colors[imgui.Col.CheckMark])
    }

    local get_cursor_y = imgui.GetCursorPosY()
    if imgui.InvisibleButton(name, imgui.ImVec2(size)) then UI_CUSTOM_TOGGLEBUTTON[name].bool = true; UI_CUSTOM_TOGGLEBUTTON[name].clock = os.clock(); bool[0] = not bool[0] end
    if imgui.IsItemHovered() then color.temp_color = imgui.GetColorU32Vec4(imgui.GetStyle().Colors[imgui.Col.FrameBgHovered]) end
    if imgui.IsItemActive() then color.temp_color = imgui.GetColorU32Vec4(imgui.GetStyle().Colors[imgui.Col.FrameBgActive]) end
    imgui.SameLine()
    imgui.BeginGroup()
    imgui.SetCursorPosY(get_cursor_y + (size.y - imgui.CalcTextSize(name).y) / 2)
    imgui.Text(name)
    imgui.EndGroup()

    if UI_CUSTOM_TOGGLEBUTTON[name].bool then
        UI_CUSTOM_TOGGLEBUTTON[name].alignment = {bringFloatTo((bool[0] and 0 or size.x / 1.5 - 5), (bool[0] and size.x / 1.5 - 5 or 0), UI_CUSTOM_TOGGLEBUTTON[name].clock, 0.3)}
        if UI_CUSTOM_TOGGLEBUTTON[name].alignment[2] == false then UI_CUSTOM_TOGGLEBUTTON[name].bool = false end
    end

    dl:AddRect(p, imgui.ImVec2(p.x + size.x, p.y + size.y), color.temp_color, rounding, nil, 2)
    dl:AddRectFilled(imgui.ImVec2(p.x + 5 + UI_CUSTOM_TOGGLEBUTTON[name].alignment[1], p.y + 5), imgui.ImVec2(p.x + size.x - size.x / 1.5 + UI_CUSTOM_TOGGLEBUTTON[name].alignment[1], p.y + size.y - 5), color.temp_color, rounding)
end



function imgui.DarkTheme()
    imgui.SwitchContext()
    --==[ STYLE ]==--
    imgui.GetStyle().WindowPadding = imgui.ImVec2(5, 5)
    imgui.GetStyle().FramePadding = imgui.ImVec2(5, 5)
    imgui.GetStyle().ItemSpacing = imgui.ImVec2(5, 5)
    imgui.GetStyle().ItemInnerSpacing = imgui.ImVec2(2, 2)
    imgui.GetStyle().TouchExtraPadding = imgui.ImVec2(0, 0)
    imgui.GetStyle().IndentSpacing = 0
    imgui.GetStyle().ScrollbarSize = 10
    imgui.GetStyle().GrabMinSize = 10

    --==[ BORDER ]==--
    imgui.GetStyle().WindowBorderSize = 1
    imgui.GetStyle().ChildBorderSize = 1
    imgui.GetStyle().PopupBorderSize = 1
    imgui.GetStyle().FrameBorderSize = 1
    imgui.GetStyle().TabBorderSize = 1

    --==[ ROUNDING ]==--
    imgui.GetStyle().WindowRounding = 5
    imgui.GetStyle().ChildRounding = 5
    imgui.GetStyle().FrameRounding = 5
    imgui.GetStyle().PopupRounding = 5
    imgui.GetStyle().ScrollbarRounding = 5
    imgui.GetStyle().GrabRounding = 5
    imgui.GetStyle().TabRounding = 5

    --==[ ALIGN ]==--
    imgui.GetStyle().WindowTitleAlign = imgui.ImVec2(0.5, 0.5)
    imgui.GetStyle().ButtonTextAlign = imgui.ImVec2(0.5, 0.5)
    imgui.GetStyle().SelectableTextAlign = imgui.ImVec2(0.5, 0.5)
    
    --==[ COLORS ]==--
    imgui.GetStyle().Colors[imgui.Col.Text]                   = imgui.ImVec4(1.00, 1.00, 1.00, 1.00)
    imgui.GetStyle().Colors[imgui.Col.TextDisabled]           = imgui.ImVec4(0.50, 0.50, 0.50, 1.00)
    imgui.GetStyle().Colors[imgui.Col.WindowBg]               = imgui.ImVec4(0.07, 0.07, 0.07, 1.00)
    imgui.GetStyle().Colors[imgui.Col.ChildBg]                = imgui.ImVec4(0.07, 0.07, 0.07, 1.00)
    imgui.GetStyle().Colors[imgui.Col.PopupBg]                = imgui.ImVec4(0.07, 0.07, 0.07, 1.00)
    imgui.GetStyle().Colors[imgui.Col.Border]                 = imgui.ImVec4(0.07, 1.00, 1.00, 1.00)
    imgui.GetStyle().Colors[imgui.Col.BorderShadow]           = imgui.ImVec4(0.00, 0.00, 0.00, 0.00)
    imgui.GetStyle().Colors[imgui.Col.FrameBg]                = imgui.ImVec4(0.12, 0.12, 0.12, 1.00)
    imgui.GetStyle().Colors[imgui.Col.FrameBgHovered]         = imgui.ImVec4(0.25, 0.25, 0.26, 1.00)
    imgui.GetStyle().Colors[imgui.Col.FrameBgActive]          = imgui.ImVec4(0.25, 0.25, 0.26, 1.00)
    imgui.GetStyle().Colors[imgui.Col.TitleBg]                = imgui.ImVec4(0.12, 0.12, 0.12, 1.00)
    imgui.GetStyle().Colors[imgui.Col.TitleBgActive]          = imgui.ImVec4(0.12, 0.12, 0.12, 1.00)
    imgui.GetStyle().Colors[imgui.Col.TitleBgCollapsed]       = imgui.ImVec4(0.12, 0.12, 0.12, 1.00)
    imgui.GetStyle().Colors[imgui.Col.MenuBarBg]              = imgui.ImVec4(0.12, 0.12, 0.12, 1.00)
    imgui.GetStyle().Colors[imgui.Col.ScrollbarBg]            = imgui.ImVec4(0.12, 0.12, 0.12, 1.00)
    imgui.GetStyle().Colors[imgui.Col.ScrollbarGrab]          = imgui.ImVec4(0.00, 0.00, 0.00, 1.00)
    imgui.GetStyle().Colors[imgui.Col.ScrollbarGrabHovered]   = imgui.ImVec4(0.41, 0.41, 0.41, 1.00)
    imgui.GetStyle().Colors[imgui.Col.ScrollbarGrabActive]    = imgui.ImVec4(0.51, 0.51, 0.51, 1.00)
    imgui.GetStyle().Colors[imgui.Col.CheckMark]              = imgui.ImVec4(1.00, 1.00, 1.00, 1.00)
    imgui.GetStyle().Colors[imgui.Col.SliderGrab]             = imgui.ImVec4(0.21, 0.20, 0.20, 1.00)
    imgui.GetStyle().Colors[imgui.Col.SliderGrabActive]       = imgui.ImVec4(0.21, 0.20, 0.20, 1.00)
    imgui.GetStyle().Colors[imgui.Col.Button]                 = imgui.ImVec4(0.12, 0.12, 0.12, 1.00)
    imgui.GetStyle().Colors[imgui.Col.ButtonHovered]          = imgui.ImVec4(0.21, 0.20, 0.20, 1.00)
    imgui.GetStyle().Colors[imgui.Col.ButtonActive]           = imgui.ImVec4(0.41, 0.41, 0.41, 1.00)
    imgui.GetStyle().Colors[imgui.Col.Header]                 = imgui.ImVec4(0.12, 0.12, 0.12, 1.00)
    imgui.GetStyle().Colors[imgui.Col.HeaderHovered]          = imgui.ImVec4(0.20, 0.20, 0.20, 1.00)
    imgui.GetStyle().Colors[imgui.Col.HeaderActive]           = imgui.ImVec4(0.47, 0.47, 0.47, 1.00)
    imgui.GetStyle().Colors[imgui.Col.Separator]              = imgui.ImVec4(0.07, 1.00, 1.00, 1.00)
    imgui.GetStyle().Colors[imgui.Col.SeparatorHovered]       = imgui.ImVec4(0.12, 0.12, 0.12, 1.00)
    imgui.GetStyle().Colors[imgui.Col.SeparatorActive]        = imgui.ImVec4(0.12, 0.12, 0.12, 1.00)
    imgui.GetStyle().Colors[imgui.Col.ResizeGrip]             = imgui.ImVec4(1.00, 1.00, 1.00, 0.25)
    imgui.GetStyle().Colors[imgui.Col.ResizeGripHovered]      = imgui.ImVec4(1.00, 1.00, 1.00, 0.67)
    imgui.GetStyle().Colors[imgui.Col.ResizeGripActive]       = imgui.ImVec4(1.00, 1.00, 1.00, 0.95)
    imgui.GetStyle().Colors[imgui.Col.Tab]                    = imgui.ImVec4(0.12, 0.12, 0.12, 1.00)
    imgui.GetStyle().Colors[imgui.Col.TabHovered]             = imgui.ImVec4(0.28, 0.28, 0.28, 1.00)
    imgui.GetStyle().Colors[imgui.Col.TabActive]              = imgui.ImVec4(0.30, 0.30, 0.30, 1.00)
    imgui.GetStyle().Colors[imgui.Col.TabUnfocused]           = imgui.ImVec4(0.07, 0.10, 0.15, 0.97)
    imgui.GetStyle().Colors[imgui.Col.TabUnfocusedActive]     = imgui.ImVec4(0.14, 0.26, 0.42, 1.00)
    imgui.GetStyle().Colors[imgui.Col.PlotLines]              = imgui.ImVec4(0.61, 0.61, 0.61, 1.00)
    imgui.GetStyle().Colors[imgui.Col.PlotLinesHovered]       = imgui.ImVec4(1.00, 0.43, 0.35, 1.00)
    imgui.GetStyle().Colors[imgui.Col.PlotHistogram]          = imgui.ImVec4(0.90, 0.70, 0.00, 1.00)
    imgui.GetStyle().Colors[imgui.Col.PlotHistogramHovered]   = imgui.ImVec4(1.00, 0.60, 0.00, 1.00)
    imgui.GetStyle().Colors[imgui.Col.TextSelectedBg]         = imgui.ImVec4(1.00, 0.00, 0.00, 0.35)
    imgui.GetStyle().Colors[imgui.Col.DragDropTarget]         = imgui.ImVec4(1.00, 1.00, 0.00, 0.90)
    imgui.GetStyle().Colors[imgui.Col.NavHighlight]           = imgui.ImVec4(0.26, 0.59, 0.98, 1.00)
    imgui.GetStyle().Colors[imgui.Col.NavWindowingHighlight]  = imgui.ImVec4(1.00, 1.00, 1.00, 0.70)
    imgui.GetStyle().Colors[imgui.Col.NavWindowingDimBg]      = imgui.ImVec4(0.80, 0.80, 0.80, 0.20)
    imgui.GetStyle().Colors[imgui.Col.ModalWindowDimBg]       = imgui.ImVec4(0.00, 0.00, 0.00, 0.70)
end
function autoupdate(json_url, prefix, url)
    local dlstatus = require('moonloader').download_status
    local json = getWorkingDirectory() .. '\\'..thisScript().name..'-version.json'
    if doesFileExist(json) then os.remove(json) end
    downloadUrlToFile(json_url, json,
      function(id, status, p1, p2)
        if status == dlstatus.STATUSEX_ENDDOWNLOAD then
          if doesFileExist(json) then
            local f = io.open(json, 'r')
            if f then
              local info = decodeJson(f:read('*a'))
              updatelink = info.updateurl
              updateversion = info.latest
              f:close()
              os.remove(json)
              if updateversion ~= thisScript().version then
                lua_thread.create(function(prefix)
                  local dlstatus = require('moonloader').download_status
                  local color = -1
                  sampAddChatMessage((prefix..'Обнаружено обновление. Пытаюсь обновиться c '..thisScript().version..' на '..updateversion), color)
                  wait(250)
                  downloadUrlToFile(updatelink, thisScript().path,
                    function(id3, status1, p13, p23)
                      if status1 == dlstatus.STATUS_DOWNLOADINGDATA then
                        print(string.format('Загружено %d из %d.', p13, p23))
                      elseif status1 == dlstatus.STATUS_ENDDOWNLOADDATA then
                        print('Загрузка обновления завершена.')
                        sampAddChatMessage((prefix..'Обновление завершено!'), color)
                        goupdatestatus = true
                        lua_thread.create(function() wait(500) thisScript():reload() end)
                      end
                      if status1 == dlstatus.STATUSEX_ENDDOWNLOAD then
                        if goupdatestatus == nil then
                          sampAddChatMessage((prefix..'Обновление прошло неудачно. Запускаю устаревшую версию..'), color)
                          update = false
                        end
                      end
                    end
                  )
                  end, prefix
                )
              else
                update = false
                print('Обновление не требуется.')
              end
            end
          else
            print('Не могу проверить обновление. Смиритесь или проверьте самостоятельно на '..url)
            update = false
          end
        end
      end
    )
    while update ~= false do wait(100) end
  end